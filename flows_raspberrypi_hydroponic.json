[
    {
        "id": "1d22c714.e50369",
        "type": "tab",
        "label": "GET Telemetry",
        "disabled": false,
        "info": ""
    },
    {
        "id": "87cb301d.9893c",
        "type": "tab",
        "label": "POST ",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5127740.f28848c",
        "type": "tab",
        "label": "System rules",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9441712c.a6198",
        "type": "tab",
        "label": "Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a0e631b8.d383b",
        "type": "mqtt-broker",
        "name": "Mosquitto",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "8193652c.e6bda8",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "hydro",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "352c089f.6b44d8",
        "type": "ui_tab",
        "name": "Hydroponic",
        "icon": "fa-tachometer",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f0e58282.f2736",
        "type": "ui_group",
        "name": "Seed Tray - Visualize",
        "tab": "352c089f.6b44d8",
        "order": 8,
        "disp": true,
        "width": "8",
        "collapse": false,
        "info": "# Seed tray LEDs"
    },
    {
        "id": "8a9b009f.1b35d",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "352c089f.6b44d8",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "65d119b5.66cb78",
        "type": "ui_group",
        "name": "Seed Tray - PH",
        "tab": "352c089f.6b44d8",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "1c37dc0b.ce28e4",
        "type": "ui_group",
        "name": "Weather forecast",
        "tab": "352c089f.6b44d8",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "72b67add.961f74",
        "type": "ui_group",
        "name": "Seed tray - Schedules",
        "tab": "ad78e894.23e758",
        "order": 7,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "e8854cf5.bbc99",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "8abb8d14.1da7c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "c9f3a157.d0af7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "e5be2d4e.0683",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "c9066fca.cee52",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "2ee23605.85e39a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 7,
        "height": 1
    },
    {
        "id": "cf3c4bd4.b57d78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "d3290ae7.21fe98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "2de4a264.b5f62e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "60a0073d.7b0198",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "6dc911ee.ea694",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "27ff61b6.64ceee",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "d68d5539.9f7388",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "25301e7.4048be2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "4e20bf36.aee24",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "cd177d02.fcb47",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 7,
        "height": 1
    },
    {
        "id": "55e06fae.59f7f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "d04eaa91.a399f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "39ffd0d.5f55a3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "d50ed20d.eaca2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "f8e5458c.a3e458",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "2e5354b4.fa9efc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "55451708.9195b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "8a9743e3.77e45",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "cd7c0825.8eea08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "b116a7ee.4a8928",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "ac904da2.49289",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "d031979b.9eb4d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "d7b17763.6bfd98",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#1dba08",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "dark"
            }
        },
        "site": {
            "name": "Hydroponic",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 12,
                "gy": 12,
                "cx": 0,
                "cy": 0,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8d4aab9b.4d6328",
        "type": "ui_group",
        "name": "Seed tray - Nutrients",
        "tab": "352c089f.6b44d8",
        "order": 4,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "c9b3db5b.545828",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bdf4ab4f.fa8958",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "817f3f37.e3851",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bdf4ab4f.fa8958",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "f0e56970.626d48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bdf4ab4f.fa8958",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c33dc565.8c19d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bdf4ab4f.fa8958",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "f4cafd8e.2fc58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bdf4ab4f.fa8958",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "217cc961.603ce6",
        "type": "persist-store",
        "filename": "/home/pi/.node-red/projects/hydro/persistence.json",
        "interval": "60"
    },
    {
        "id": "45199dde.854f64",
        "type": "ui_group",
        "name": "Seed tray - Light",
        "tab": "352c089f.6b44d8",
        "order": 5,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "6c15eb0d.8f5814",
        "type": "ui_group",
        "name": "Water",
        "tab": "352c089f.6b44d8",
        "order": 6,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "fc40ab90.fee1e8",
        "type": "ui_group",
        "name": "Graph",
        "tab": "f0cf9f07.0cff7",
        "order": 9,
        "disp": true,
        "width": "14",
        "collapse": false
    },
    {
        "id": "8073017c.fb41a",
        "type": "ui_tab",
        "name": "Setting",
        "icon": "fa-sliders",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f0cf9f07.0cff7",
        "type": "ui_tab",
        "name": "Graph",
        "icon": "fa-area-chart",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ad78e894.23e758",
        "type": "ui_tab",
        "name": "Schedule",
        "icon": "fa-calendar",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1c4b8cb2.e1e2e3",
        "type": "ui_group",
        "name": "Hydroponic",
        "tab": "8073017c.fb41a",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "253223a9.86fe4c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c37dc0b.ce28e4",
        "order": 5,
        "width": 9,
        "height": 1
    },
    {
        "id": "2237c90.356e538",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c37dc0b.ce28e4",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "266e5803.d7baf8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c37dc0b.ce28e4",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "8dfe4953.d90198",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "9515c87d.7603b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "66b998fd.3d7168",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "bb10d091.bee2e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "40bc353a.e96b1c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "1edeff5.8101401",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "52d7fa27.b92884",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "74b7a24f.a6847c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "29fef020.1377c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "58b6780c.a55368",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8a9b009f.1b35d",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "a3e7a9a5.ba4a58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65d119b5.66cb78",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "5cc3cf4f.c802f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65d119b5.66cb78",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "6582c135.e82df",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65d119b5.66cb78",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "a611413e.fa96b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "65d119b5.66cb78",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "8516f88d.851bc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "c9f739d6.172c48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "5f6e378c.a36ac8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "8fb12a52.651758",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "eae7fc74.862bc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "a184db8a.02f998",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "2b5336c1.35160a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "26f58f59.1d595",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "ebf7cdcc.b6ed4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "181703ab.1237fc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8d4aab9b.4d6328",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "9e5ea6db.ddc3e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "f3fc18eb.780118",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "d12d5379.4e89f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "3eb3a639.87463a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "4307b159.ef6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "4ecbba67.b05bd4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "b5a280e.20f158",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "ab5f2bdd.f1d7c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 14,
        "width": 5,
        "height": 1
    },
    {
        "id": "a5d8b60c.15f328",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "45199dde.854f64",
        "order": 15,
        "width": 5,
        "height": 1
    },
    {
        "id": "e4591dd5.d8b5b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "b8b8c3f2.b9d8e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a23bf9fe.11d708",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "44cd50bd.58026",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "b92694bf.e77688",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "681a372c.7b01a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "9c4c0a9b.453708",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "19eca5dc.5bd81a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "16acbf27.01f8a1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "6c15eb0d.8f5814",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "f820824d.7b1d5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "92233bf2.f08e28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "e1648b16.ecaa88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "1aa3d8d4.adff77",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "71fa0b15.085054",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "4a468e42.f489d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "415c22f6.8018ac",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "c3937591.5025f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "dffa52ba.8a8ec",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "b8bc3149.f1749",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "e079150e.9e11c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "27dbb0ff.15961",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "f0f0792.4c74688",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "a1527b13.6c5da8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 28,
        "width": 2,
        "height": 1
    },
    {
        "id": "99f1dc6f.bffdf",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "fa02ad85.482a6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1c4b8cb2.e1e2e3",
        "order": 32,
        "width": 2,
        "height": 1
    },
    {
        "id": "40dc9b6d.55ee84",
        "type": "ui_group",
        "name": "Harvesting",
        "tab": "352c089f.6b44d8",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e30bc267.9a60e",
        "type": "mqtt in",
        "z": "1d22c714.e50369",
        "name": "",
        "topic": "hydro/t/seed_tray",
        "qos": "0",
        "datatype": "auto",
        "broker": "a0e631b8.d383b",
        "x": 200,
        "y": 766,
        "wires": [
            [
                "67398353.3f850c"
            ]
        ]
    },
    {
        "id": "67398353.3f850c",
        "type": "json",
        "z": "1d22c714.e50369",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 766,
        "wires": [
            [
                "4fa1702.8b2e49"
            ]
        ]
    },
    {
        "id": "4fa1702.8b2e49",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\n\nvar waterQualityMsg = { \n    payload: msg.payload.s.water.ppm\n};\n\nvar waterTempMsg = { \n    payload: msg.payload.s.water.temp\n};\n\nvar waterPhMsg = { \n    payload: msg.payload.s.water.ph\n};\n\nvar waterLevelMsg = { \n    payload: msg.payload.s.water.level\n};\n\nvar luminosityMsg = { \n    payload: msg.payload.s.lux\n};\n\n\nreturn [\n    waterQualityMsg, \n    luminosityMsg, \n    waterTempMsg,\n    waterPhMsg,\n    waterLevelMsg\n];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 946,
        "wires": [
            [
                "6a5ac7a1.e350c8",
                "39bf6628.85f8ba",
                "b2d124cc.ae5b18"
            ],
            [
                "b7f7abe3.8afe58",
                "cffdb1e7.15d13",
                "ed698194.f939d"
            ],
            [
                "f9ece608.ba06e8",
                "60f91bf2.98dd04",
                "ddf60a00.0b8158"
            ],
            [
                "e3814403.711458",
                "7d66ede7.acf094",
                "84888512.5d3ad8",
                "ea0e311d.857dc"
            ],
            [
                "b1c0fbbf.8e9c58",
                "ce4f2657.0c3588",
                "b8023ba0.969078",
                "a150ea22.90b8b8"
            ]
        ]
    },
    {
        "id": "acca3832.810b88",
        "type": "mqtt out",
        "z": "87cb301d.9893c",
        "name": "Lamp",
        "topic": "hydro/lamp/switch",
        "qos": "0",
        "retain": "",
        "broker": "a0e631b8.d383b",
        "x": 770,
        "y": 180,
        "wires": []
    },
    {
        "id": "3e247b14.95d3a4",
        "type": "switch",
        "z": "5127740.f28848c",
        "name": "Mean PH greater than global MaxPH or less than global Min PH",
        "property": "payload[0].mean",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "maxPH",
                "vt": "global"
            },
            {
                "t": "lt",
                "v": "minPH",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 200,
        "wires": [
            [
                "8fd06c84.9d955"
            ],
            [
                "f76a168.49897e8"
            ]
        ]
    },
    {
        "id": "8fd06c84.9d955",
        "type": "function",
        "z": "5127740.f28848c",
        "name": "Pass message",
        "func": "msg.payload = \"PH too high\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 100,
        "wires": [
            [
                "f3e2c3ad.8ebb2"
            ]
        ]
    },
    {
        "id": "e88e5d3f.13895",
        "type": "delay",
        "z": "1d22c714.e50369",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 840,
        "y": 1606,
        "wires": [
            [
                "c2314fab.6c8af"
            ]
        ]
    },
    {
        "id": "39bf6628.85f8ba",
        "type": "delay",
        "z": "1d22c714.e50369",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 780,
        "y": 626,
        "wires": [
            [
                "7fe995e5.477afc",
                "f8fee95.2171618"
            ]
        ]
    },
    {
        "id": "62bc488f.b3dd18",
        "type": "mqtt in",
        "z": "1d22c714.e50369",
        "name": "",
        "topic": "hydro/t/room",
        "qos": "0",
        "datatype": "auto",
        "broker": "a0e631b8.d383b",
        "x": 190,
        "y": 1606,
        "wires": [
            [
                "7023be29.a8b"
            ]
        ]
    },
    {
        "id": "7023be29.a8b",
        "type": "json",
        "z": "1d22c714.e50369",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1606,
        "wires": [
            [
                "1e6d501a.c6f28"
            ]
        ]
    },
    {
        "id": "1e6d501a.c6f28",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\nvar roomTemperatureMsg =  { \n        payload: msg.payload.r.t \n};\n    \nvar roomHumidityMsg = { \n    payload: msg.payload.r.h\n}; \n\nreturn [\n    roomTemperatureMsg, \n    roomHumidityMsg\n];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 1606,
        "wires": [
            [
                "b5c12285.51ca3",
                "e88e5d3f.13895",
                "9b1656b1.099d08"
            ],
            [
                "f3b265b2.271218",
                "a2c963c.a4756a"
            ]
        ]
    },
    {
        "id": "60f91bf2.98dd04",
        "type": "delay",
        "z": "1d22c714.e50369",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 986,
        "wires": [
            [
                "61e95af8.591824",
                "a34db445.a149b8"
            ]
        ]
    },
    {
        "id": "85c1ae45.14716",
        "type": "comment",
        "z": "1d22c714.e50369",
        "name": "OpenWeatherMap One Call API for Weather and Forecast",
        "info": "",
        "x": 550,
        "y": 206,
        "wires": []
    },
    {
        "id": "c8db48f7.af9608",
        "type": "http request",
        "z": "1d22c714.e50369",
        "name": "Get OWM data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "https://api.openweathermap.org/data/2.5/onecall",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 760,
        "y": 326,
        "wires": [
            [
                "fe79ff8b.aa786",
                "6c1d8e8.c6bf77"
            ]
        ]
    },
    {
        "id": "f376d3a0.9a725",
        "type": "inject",
        "z": "1d22c714.e50369",
        "name": "Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3000",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 400,
        "y": 266,
        "wires": [
            [
                "a887c10.0424b4"
            ]
        ]
    },
    {
        "id": "fe79ff8b.aa786",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Format current data",
        "func": "var icon = {};\n\nvar units=flow.get('units');\nif (units===undefined)\n{\n  units=\"imperial\";\n}\n\nfunction timeConvert(UNIX_timestamp, offset){\n  var a = new Date(UNIX_timestamp * 1000 + offset*1000);\n  var hour = a.getHours();\n  var suffix = \" am\";\n  if (hour >= 12) {\n    hour = hour - 12;\n    suffix = \" pm\";\n  }\n  if (hour === 0) {\n    hour = 12;\n  }\n  var min = a.getMinutes();\n  if (min < 10) {min = \"0\" + min;}\n  return hour + ':' + min + suffix;\n}\n\nvar degreesToCardinal = function(deg){\nif (deg>11.25 && deg<=33.75){\nreturn \"NNE\";\n  }else if (deg>33.75 && deg<56.25){\nreturn \"NE\";\n  }else if (deg>56.25 && deg<78.75){\nreturn \"ENE\";\n  }else if (deg>78.75 && deg<101.25){\nreturn \"E\";\n  }else if (deg>101.25 && deg<123.75){\nreturn \"ESE\";\n  }else if (deg>123.75 && deg<146.25){\nreturn \"SE\";\n  }else if (deg>146.25 && deg<168.75){\nreturn \"SSE\";\n  }else if (deg>168.75 && deg<191.25){\nreturn \"S\";\n  }else if (deg>191.25 && deg<213.75){\nreturn \"SSW\";\n  }else if (deg>213.75 && deg<236.25){\nreturn \"SW\";\n  }else if (deg>236.25 && deg<258.75){\nreturn \"WSW\";\n  }else if (deg>258.75 && deg<281.25){\nreturn \"W\";\n  }else if (deg>281.25 && deg<303.75){\nreturn \"WNW\";\n  }else if (deg>303.75 && deg<326.25){\nreturn \"NW\";\n  }else if (deg>326.25 && deg<348.75){\nreturn \"NNW\";\n  }else{\nreturn \"N\"; \n  }\n}\n\nif (units == \"imperial\")\n{\n  msg.payload.current.temp = msg.payload.current.temp.toFixed() + ' °F';\n  msg.payload.current.wind_speed = msg.payload.current.wind_speed.toFixed() + ' mph';\n}\nelse // metric units\n{\n  msg.payload.current.temp = msg.payload.current.temp.toFixed(1) + ' °C';\n  msg.payload.current.wind_speed = msg.payload.current.wind_speed.toFixed(1) + ' m/s';\n}\n\nmsg.payload.current.wind_cardinal = degreesToCardinal(msg.payload.current.wind_deg);\nmsg.payload.current.sunrise = timeConvert(msg.payload.current.sunrise, msg.payload.timezone_offset);\nmsg.payload.current.sunset = timeConvert(msg.payload.current.sunset, msg.payload.timezone_offset);\n\nvar iconString = 'wi-owm-' + msg.payload.current.weather[0].icon + ' wi-4x';\nicon = {\n    ui_control: {\n        icon: iconString\n    }\n}; \n\nreturn [msg, icon];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 326,
        "wires": [
            [
                "ebeb7e6d.61e6c",
                "c9cadf3c.4dd91",
                "75f934f.744b2cc",
                "a77336d4.24c878",
                "ffd2dd.8b18ad2",
                "f9da79c2.9a6128"
            ],
            [
                "509eb66d.0f6d88"
            ]
        ]
    },
    {
        "id": "a887c10.0424b4",
        "type": "change",
        "z": "1d22c714.e50369",
        "name": "Set location, appid, units",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "35.64",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "139.75",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.appid",
                "pt": "msg",
                "to": "15d881fdb1d9153fb4f7a70b1213113b",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.units",
                "pt": "msg",
                "to": "metric",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload.units",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 266,
        "wires": [
            [
                "c8db48f7.af9608"
            ]
        ]
    },
    {
        "id": "45293d1e.aedc04",
        "type": "link out",
        "z": "1d22c714.e50369",
        "name": "Refresh",
        "links": [
            "b8c07479.ab99c8"
        ],
        "x": 1395,
        "y": 426,
        "wires": []
    },
    {
        "id": "b8c07479.ab99c8",
        "type": "link in",
        "z": "1d22c714.e50369",
        "name": "",
        "links": [
            "45293d1e.aedc04"
        ],
        "x": 435,
        "y": 306,
        "wires": [
            [
                "a887c10.0424b4"
            ]
        ]
    },
    {
        "id": "5914ecc9.808654",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\nvar newMsg =  { \n        payload: new Date(msg.payload[0].time)\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 1606,
        "wires": [
            [
                "1c83a03b.a169c"
            ]
        ]
    },
    {
        "id": "8b39391d.356ce8",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "",
        "func": "\n var series =[\"Water quality\", \"Water temperature\", \"Luminosity\", \"Water PH\"];\n var labels = [\"Water quality\", \"Water temperature\", \"Luminosity\", \"Water PH\"];\n var data = [];\n var dataWaterQuality = [];\n var dataWaterPH = [];\n var dataWaterTemperature = [];\n var dataLuminosity = [];\n\n var i, len, string;\n\n for (i = 0, len = msg.payload.waterTemperature.length, string = \"\"; i < len; i++) {\n  dataWaterTemperature.push({\n        \"x\":Date.parse(msg.payload.waterTemperature[i].time), \n        \"y\":Number(msg.payload.waterTemperature[i].value)});\n  }\n\n for (i = 0, len = msg.payload.waterQuality.length, string = \"\"; i < len; i++) {\n    dataWaterQuality.push({\n        \"x\":Date.parse(msg.payload.waterQuality[i].time), \n        \"y\":Number(msg.payload.waterQuality[i].value)});\n }\n \n for (i = 0, len = msg.payload.luminosity.length, string = \"\"; i < len; i++) {\n    dataLuminosity.push({\n        \"x\":Date.parse(msg.payload.luminosity[i].time), \n        \"y\":Number(msg.payload.luminosity[i].value)});\n }\n \n for (i = 0, len = msg.payload.waterPH.length, string = \"\"; i < len; i++) {\n    dataWaterPH.push({\n        \"x\":Date.parse(msg.payload.waterPH[i].time), \n        \"y\":Number(msg.payload.waterPH[i].value)});\n }\n     \n\n data = [dataWaterQuality, dataWaterTemperature,\n    dataLuminosity, dataWaterPH];\n    \n msg.payload = [{series, data, labels}];\n\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1600,
        "y": 926,
        "wires": [
            [
                "ad68634.aaabaa"
            ]
        ]
    },
    {
        "id": "fff065af.0a0958",
        "type": "change",
        "z": "1d22c714.e50369",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origin",
                "pt": "msg",
                "to": "waterQuality",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 666,
        "wires": [
            [
                "abe678a7.9a28b8"
            ]
        ]
    },
    {
        "id": "7b566b7.097d094",
        "type": "change",
        "z": "1d22c714.e50369",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origin",
                "pt": "msg",
                "to": "waterTemperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1026,
        "wires": [
            [
                "abe678a7.9a28b8"
            ]
        ]
    },
    {
        "id": "abe678a7.9a28b8",
        "type": "join",
        "z": "1d22c714.e50369",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "origin",
        "joiner": "message",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1470,
        "y": 926,
        "wires": [
            [
                "8b39391d.356ce8"
            ]
        ]
    },
    {
        "id": "3e5edd24.dccb82",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\nvar newMsg =  { \n        payload: new Date(msg.payload[0].time)\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 986,
        "wires": [
            [
                "ad8e7270.bfabd"
            ]
        ]
    },
    {
        "id": "eb66256c.111fa8",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\nvar newMsg =  { \n        payload: new Date(msg.payload[0].time)\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 626,
        "wires": [
            [
                "383c0ad2.b2e656"
            ]
        ]
    },
    {
        "id": "b9dd843.3247178",
        "type": "delay",
        "z": "87cb301d.9893c",
        "name": "",
        "pauseType": "delayv",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1480,
        "y": 400,
        "wires": [
            [
                "25335612.5b58da"
            ]
        ]
    },
    {
        "id": "e6b06459.aad598",
        "type": "mqtt out",
        "z": "87cb301d.9893c",
        "name": "Water spray",
        "topic": "hydro/water_spray/switch",
        "qos": "0",
        "retain": "",
        "broker": "a0e631b8.d383b",
        "x": 830,
        "y": 340,
        "wires": []
    },
    {
        "id": "a1ae6930.2b69c8",
        "type": "mqtt in",
        "z": "1d22c714.e50369",
        "name": "",
        "topic": "hydro/water_spray/s",
        "qos": "0",
        "datatype": "auto",
        "broker": "a0e631b8.d383b",
        "x": 170,
        "y": 2406,
        "wires": [
            [
                "bde231de.d54eb"
            ]
        ]
    },
    {
        "id": "8c5d6ffa.8aeae",
        "type": "link out",
        "z": "87cb301d.9893c",
        "name": "",
        "links": [],
        "x": -35,
        "y": 60,
        "wires": []
    },
    {
        "id": "25335612.5b58da",
        "type": "change",
        "z": "87cb301d.9893c",
        "name": "Switch to off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 400,
        "wires": [
            [
                "c1e51a25.bcd2f8"
            ]
        ]
    },
    {
        "id": "dec1467a.516188",
        "type": "switch",
        "z": "87cb301d.9893c",
        "name": "When water spray on",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 860,
        "y": 400,
        "wires": [
            [
                "57e4ad43.c33774"
            ]
        ]
    },
    {
        "id": "e78bf6ed.43bf08",
        "type": "inject",
        "z": "1d22c714.e50369",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "0.2",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 190,
        "y": 1906,
        "wires": [
            [
                "134f40ec.1ec4bf"
            ]
        ]
    },
    {
        "id": "cffdb1e7.15d13",
        "type": "delay",
        "z": "1d22c714.e50369",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 780,
        "y": 806,
        "wires": [
            [
                "5e814313.84529c",
                "afc9c5e2.a75b78"
            ]
        ]
    },
    {
        "id": "517995d5.866e6c",
        "type": "change",
        "z": "1d22c714.e50369",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origin",
                "pt": "msg",
                "to": "luminosity",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 846,
        "wires": [
            [
                "abe678a7.9a28b8"
            ]
        ]
    },
    {
        "id": "5a973813.655e68",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\nvar newMsg =  { \n        payload: new Date(msg.payload[0].time)\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 806,
        "wires": [
            [
                "cb675a7c.a85308"
            ]
        ]
    },
    {
        "id": "7d66ede7.acf094",
        "type": "delay",
        "z": "1d22c714.e50369",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 1206,
        "wires": [
            [
                "4594e62e.1bff58",
                "42b0c0f5.42fdf"
            ]
        ]
    },
    {
        "id": "a12ec6c.7faa138",
        "type": "change",
        "z": "1d22c714.e50369",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "origin",
                "pt": "msg",
                "to": "waterPH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1246,
        "wires": [
            [
                "abe678a7.9a28b8"
            ]
        ]
    },
    {
        "id": "9442afba.2d0c3",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\nvar newMsg =  { \n        payload: new Date(msg.payload[0].time)\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 1206,
        "wires": [
            [
                "1aca970a.1a6d09"
            ]
        ]
    },
    {
        "id": "134f40ec.1ec4bf",
        "type": "camerapi-takephoto",
        "z": "1d22c714.e50369",
        "filemode": "1",
        "filename": "photo1.JPEG",
        "filedefpath": "0",
        "filepath": "~/.node-red/projects/hydro/ui-media/",
        "fileformat": "jpeg",
        "resolution": "4",
        "rotation": "0",
        "fliph": "0",
        "flipv": "0",
        "brightness": "50",
        "contrast": "0",
        "sharpness": "0",
        "quality": "80",
        "imageeffect": "none",
        "exposuremode": "night",
        "iso": "0",
        "agcwait": "1.0",
        "led": "0",
        "awb": "auto",
        "name": "Take Photo",
        "x": 360,
        "y": 1906,
        "wires": [
            [
                "ec42ca0e.6c9dd8"
            ]
        ]
    },
    {
        "id": "6a5ac7a1.e350c8",
        "type": "influxdb out",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "",
        "measurement": "water_quality",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 880,
        "y": 586,
        "wires": []
    },
    {
        "id": "b5c12285.51ca3",
        "type": "influxdb out",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "",
        "measurement": "room_temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 960,
        "y": 1566,
        "wires": []
    },
    {
        "id": "f3b265b2.271218",
        "type": "influxdb out",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "",
        "measurement": "room_humidity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 950,
        "y": 1706,
        "wires": []
    },
    {
        "id": "b7f7abe3.8afe58",
        "type": "influxdb out",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "",
        "measurement": "luminosity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 870,
        "y": 766,
        "wires": []
    },
    {
        "id": "f9ece608.ba06e8",
        "type": "influxdb out",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "",
        "measurement": "water_temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 880,
        "y": 946,
        "wires": []
    },
    {
        "id": "e3814403.711458",
        "type": "influxdb out",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "",
        "measurement": "water_ph",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 850,
        "y": 1166,
        "wires": []
    },
    {
        "id": "1b07e4d1.7c4d9b",
        "type": "influxdb in",
        "z": "5127740.f28848c",
        "influxdb": "8193652c.e6bda8",
        "name": "Mean water PH over last 20min",
        "query": "SELECT mean(value) FROM water_ph WHERE time >= now() - 20m",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "3e247b14.95d3a4"
            ]
        ]
    },
    {
        "id": "c2314fab.6c8af",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select last entry",
        "query": "SELECT * FROM room_temperature GROUP BY * ORDER BY DESC LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1000,
        "y": 1606,
        "wires": [
            [
                "5914ecc9.808654"
            ]
        ]
    },
    {
        "id": "7fe995e5.477afc",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select last entry",
        "query": "SELECT * FROM water_quality GROUP BY * ORDER BY DESC LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 940,
        "y": 626,
        "wires": [
            [
                "eb66256c.111fa8"
            ]
        ]
    },
    {
        "id": "61e95af8.591824",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select last entry",
        "query": "SELECT * FROM water_temperature GROUP BY * ORDER BY DESC LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 920,
        "y": 986,
        "wires": [
            [
                "3e5edd24.dccb82"
            ]
        ]
    },
    {
        "id": "f8fee95.2171618",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select past 24 hours",
        "query": "SELECT * FROM water_quality  WHERE time >= now() - 24h ORDER BY time DESC",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 960,
        "y": 666,
        "wires": [
            [
                "fff065af.0a0958"
            ]
        ]
    },
    {
        "id": "a34db445.a149b8",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select past 24 hours",
        "query": "SELECT * FROM water_temperature  WHERE time >= now() - 24h ORDER BY time DESC",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 940,
        "y": 1026,
        "wires": [
            [
                "7b566b7.097d094"
            ]
        ]
    },
    {
        "id": "5e814313.84529c",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select past 24 hours",
        "query": "SELECT * FROM luminosity  WHERE time >= now() - 24h ORDER BY time DESC",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 960,
        "y": 846,
        "wires": [
            [
                "517995d5.866e6c"
            ]
        ]
    },
    {
        "id": "afc9c5e2.a75b78",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select last entry",
        "query": "SELECT * FROM luminosity GROUP BY * ORDER BY DESC LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 940,
        "y": 806,
        "wires": [
            [
                "5a973813.655e68"
            ]
        ]
    },
    {
        "id": "4594e62e.1bff58",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select last entry",
        "query": "SELECT * FROM water_ph GROUP BY * ORDER BY DESC LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 920,
        "y": 1206,
        "wires": [
            [
                "9442afba.2d0c3"
            ]
        ]
    },
    {
        "id": "42b0c0f5.42fdf",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select past 24 hours",
        "query": "SELECT * FROM water_ph WHERE time >= now() - 24h ORDER BY time DESC",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 940,
        "y": 1246,
        "wires": [
            [
                "a12ec6c.7faa138"
            ]
        ]
    },
    {
        "id": "ed698194.f939d",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "group": "45199dde.854f64",
        "order": 9,
        "width": 3,
        "height": 3,
        "name": "Luminosity",
        "icon": "",
        "label": "",
        "unit": "Lux",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "sectors": [
            {
                "val": 0,
                "col": "#337f24",
                "t": "min",
                "dot": 0
            },
            {
                "val": 15000,
                "col": "#337f24",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "3",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 790,
        "y": 726,
        "wires": []
    },
    {
        "id": "ddf60a00.0b8158",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "group": "8a9b009f.1b35d",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "Water temperature",
        "icon": "fa-thermometer",
        "label": "Water T°",
        "unit": " °C",
        "layout": "linear",
        "decimals": "1",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff9900",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5,
                "col": "#cccc00",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 15,
                "col": "#337f24",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#d7771d",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 40,
                "col": "#d7771d",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 790,
        "y": 906,
        "wires": []
    },
    {
        "id": "63de4a5e.7c19a4",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Water Quality",
        "icon": "",
        "label": "",
        "unit": "PPM",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff6666",
                "t": "min",
                "dot": 0
            },
            {
                "val": 2500,
                "col": "#ff6666",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "3",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1040,
        "y": 546,
        "wires": []
    },
    {
        "id": "9b1656b1.099d08",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "group": "8a9b009f.1b35d",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "Room temperature DHT11",
        "icon": "fa-thermometer-full",
        "label": "Room T°",
        "unit": " °C",
        "layout": "linear",
        "decimals": "1",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff3333",
                "t": "min",
                "dot": 0
            },
            {
                "val": 12,
                "col": "#ff9900",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 18,
                "col": "#337f24",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#ff9900",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 40,
                "col": "#ff9900",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 900,
        "y": 1526,
        "wires": []
    },
    {
        "id": "a2c963c.a4756a",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "group": "8a9b009f.1b35d",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "Room Humidity DHT11",
        "icon": "fa-tint",
        "label": "Humidity",
        "unit": "%",
        "layout": "linear",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff3333",
                "t": "min",
                "dot": 0
            },
            {
                "val": 15,
                "col": "#ff9900",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#337f24",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#ff2300",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#ff2300",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 890,
        "y": 1666,
        "wires": []
    },
    {
        "id": "4d58abb1.177e64",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "d": true,
        "group": "",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Water PH",
        "icon": "fa-lemon-o fa-0.5x",
        "label": "",
        "unit": "",
        "layout": "radial",
        "decimals": "1",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "ph",
        "secondary": "secondary",
        "inline": false,
        "sectors": [
            {
                "val": 3,
                "col": "#ff1900",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5,
                "col": "#0ecc00",
                "t": "sec",
                "dot": 5
            },
            {
                "val": 6.5,
                "col": "#fb1900",
                "t": "sec",
                "dot": 2
            },
            {
                "val": 10,
                "col": "#fb1900",
                "t": "max",
                "dot": 5
            }
        ],
        "lineWidth": "3",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 980,
        "y": 1126,
        "wires": []
    },
    {
        "id": "df864faf.11005",
        "type": "ui_switch",
        "z": "87cb301d.9893c",
        "name": "Grow lights",
        "label": "LED  ",
        "tooltip": "Led",
        "group": "45199dde.854f64",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "hydroponic/lamp",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-toggle-on fa-2x",
        "oncolor": "#ffc30b",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-toggle-off  fa-2x",
        "offcolor": "#ffc30b",
        "x": 611,
        "y": 180,
        "wires": [
            [
                "acca3832.810b88"
            ]
        ],
        "info": "# Seeds tray light"
    },
    {
        "id": "c1e51a25.bcd2f8",
        "type": "ui_switch",
        "z": "87cb301d.9893c",
        "name": "Water spray switch",
        "label": "Seed spray",
        "tooltip": "",
        "group": "6c15eb0d.8f5814",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-toggle-on fa-2x",
        "oncolor": "#0077be",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-toggle-off fa-2x",
        "offcolor": "#0077be",
        "x": 630,
        "y": 340,
        "wires": [
            [
                "dec1467a.516188",
                "e6b06459.aad598"
            ]
        ]
    },
    {
        "id": "509eb66d.0f6d88",
        "type": "ui_button",
        "z": "1d22c714.e50369",
        "name": "IconRefresh",
        "group": "1c37dc0b.ce28e4",
        "order": 1,
        "width": 4,
        "height": 2,
        "passthru": false,
        "label": "",
        "tooltip": "Refresh",
        "color": "",
        "bgcolor": "",
        "icon": "fa-refresh fa-4x",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 1270,
        "y": 426,
        "wires": [
            [
                "45293d1e.aedc04"
            ]
        ]
    },
    {
        "id": "75f934f.744b2cc",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "1c37dc0b.ce28e4",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Description",
        "label": "",
        "format": "{{msg.payload.current.weather[0].description}}",
        "layout": "row-left",
        "x": 1270,
        "y": 226,
        "wires": []
    },
    {
        "id": "c9cadf3c.4dd91",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "1c37dc0b.ce28e4",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Wind",
        "label": "",
        "format": "{{msg.payload.current.wind_speed}}&nbsp;&nbsp;<i class=\"wi wi-darksky-wind\"></i>&nbsp;&nbsp;{{msg.payload.current.wind_cardinal}}",
        "layout": "col-center",
        "x": 1250,
        "y": 306,
        "wires": []
    },
    {
        "id": "a77336d4.24c878",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "1c37dc0b.ce28e4",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "SunriseTime",
        "label": "",
        "format": "<i class=\"wi wi-owm-01d\"></i>&nbsp;<i class=\"fa fa-arrow-up\"></i>&nbsp;&nbsp;{{msg.payload.current.sunrise}}",
        "layout": "row-left",
        "x": 1270,
        "y": 346,
        "wires": []
    },
    {
        "id": "ffd2dd.8b18ad2",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "1c37dc0b.ce28e4",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "SunsetTime",
        "label": "",
        "format": "<i class=\"wi wi-owm-01d\"></i>&nbsp;<i class=\"fa fa-arrow-down\"></i>&nbsp;&nbsp;{{msg.payload.current.sunset}}",
        "layout": "row-left",
        "x": 1270,
        "y": 386,
        "wires": []
    },
    {
        "id": "ebeb7e6d.61e6c",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "1c37dc0b.ce28e4",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "Temperature",
        "label": "",
        "format": "<p style=\"font-size: 200%\">{{msg.payload.current.temp}}</p>",
        "layout": "row-left",
        "x": 1270,
        "y": 266,
        "wires": []
    },
    {
        "id": "1c83a03b.a169c",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8a9b009f.1b35d",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Last refresh - temp",
        "label": "",
        "format": "<i class=\"fa fa-refresh\" aria-hidden=\"true\">&nbsp; {{ msg.payload | date: 'HH:mm:ss'}}</i> ",
        "layout": "row-right",
        "x": 1410,
        "y": 1606,
        "wires": []
    },
    {
        "id": "ad8e7270.bfabd",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8a9b009f.1b35d",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "Last refresh - water temp",
        "label": "",
        "format": "<i class=\"fa fa-refresh\" aria-hidden=\"true\">&nbsp; {{ msg.payload | date: 'HH:mm:ss'}}</i> ",
        "layout": "row-right",
        "x": 1410,
        "y": 986,
        "wires": []
    },
    {
        "id": "383c0ad2.b2e656",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "Last refresh - water quality",
        "label": "",
        "format": "<i class=\"fa fa-refresh\" aria-hidden=\"true\">&nbsp; {{ msg.payload | date: 'HH:mm:ss'}}</i> ",
        "layout": "row-center",
        "x": 1440,
        "y": 626,
        "wires": []
    },
    {
        "id": "cb675a7c.a85308",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "45199dde.854f64",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "Last refresh - luminosity",
        "label": "",
        "format": "<front size=\"1\"><i class=\"fa fa-refresh\">&nbsp; {{ msg.payload | date: 'HH:mm:ss'}}</i> </font>",
        "layout": "row-center",
        "x": 1470,
        "y": 806,
        "wires": []
    },
    {
        "id": "1aca970a.1a6d09",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "65d119b5.66cb78",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Last refresh - water PH",
        "label": "",
        "format": "<i class=\"fa fa-refresh\" aria-hidden=\"true\">&nbsp; {{ msg.payload | date: 'HH:mm:ss'}}</i> ",
        "layout": "row-right",
        "x": 1410,
        "y": 1206,
        "wires": []
    },
    {
        "id": "ad68634.aaabaa",
        "type": "ui_chart",
        "z": "1d22c714.e50369",
        "name": "Seed tray historical value graph",
        "group": "fc40ab90.fee1e8",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1830,
        "y": 926,
        "wires": [
            []
        ]
    },
    {
        "id": "f3e2c3ad.8ebb2",
        "type": "ui_toast",
        "z": "5127740.f28848c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Water PH",
        "name": "Alert ",
        "x": 1010,
        "y": 184,
        "wires": []
    },
    {
        "id": "ec42ca0e.6c9dd8",
        "type": "ui_template",
        "z": "1d22c714.e50369",
        "group": "f0e58282.f2736",
        "name": "Seed tray camera",
        "order": 1,
        "width": 8,
        "height": 8,
        "format": "<md-card class=\"md-primary\">\n  \n  <md-card-actions>\n   <md-button ng-click=\"send({payload:1})\" >\n       <ui-icon icon=\"camera\"></ui-icon>Take a photo<br>\n   </md-button>\n   <md-button ng-click=\"send({payload:1})\" >\n     <i class=\"fa fa-refresh\" aria-hidden=\"true\">  {{timestamp | date: 'MMM d, y - HH:mm:ss'}}</i>\n   </md-button>\n  </md-card-actions>\n  \n  <md-card-header>\n    <md-card-media>\n         <img width=\"360\" height=\"240\" src=\"{{photoURL}}\" class=\"md-card-image\" >\n    </md-card-media>\n  </md-card-header>\n\n</md-card>\n\n\n\n<script>\n\n(function(scope) {\n    // $watch fires each time the node is triggered in the flow\n    scope.$watch('msg', function(msg) {\n        scope.timestamp = new Date();\n        scope.photoURL = \"/photo1.JPEG?_=\" + new Date();\n    });\n\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 380,
        "y": 1966,
        "wires": [
            [
                "134f40ec.1ec4bf"
            ]
        ]
    },
    {
        "id": "f9da79c2.9a6128",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "1c37dc0b.ce28e4",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "Timezone",
        "label": "",
        "format": "{{msg.payload.timezone}}",
        "layout": "row-left",
        "x": 1260,
        "y": 186,
        "wires": []
    },
    {
        "id": "5d2f5ff2.180c5",
        "type": "delay",
        "z": "87cb301d.9893c",
        "name": "",
        "pauseType": "delayv",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 940,
        "y": 620,
        "wires": [
            [
                "a7364d44.56698"
            ]
        ]
    },
    {
        "id": "5be7de2e.ba1d2",
        "type": "mqtt out",
        "z": "87cb301d.9893c",
        "name": "Nutriments A",
        "topic": "hydro/nutriments/switch",
        "qos": "0",
        "retain": "",
        "broker": "a0e631b8.d383b",
        "x": 490,
        "y": 540,
        "wires": []
    },
    {
        "id": "a7364d44.56698",
        "type": "change",
        "z": "87cb301d.9893c",
        "name": "Switch to off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 620,
        "wires": [
            [
                "648ce0a1.8a9de"
            ]
        ]
    },
    {
        "id": "93cd22de.a5d2c",
        "type": "switch",
        "z": "87cb301d.9893c",
        "name": "When nutriments spray on",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 620,
        "wires": [
            [
                "bb16ff0b.197e6"
            ]
        ]
    },
    {
        "id": "648ce0a1.8a9de",
        "type": "ui_switch",
        "z": "87cb301d.9893c",
        "name": "Solution A switch",
        "label": "Sol. A",
        "tooltip": "",
        "group": "8d4aab9b.4d6328",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-toggle-on fa-2x",
        "oncolor": "#bb86fc",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-toggle-off fa-2x",
        "offcolor": "#bb86fc",
        "x": 290,
        "y": 540,
        "wires": [
            [
                "93cd22de.a5d2c",
                "5be7de2e.ba1d2"
            ]
        ]
    },
    {
        "id": "9cd0faa8.7a4eb8",
        "type": "mqtt in",
        "z": "1d22c714.e50369",
        "name": "",
        "topic": "hydro/nutriments/s",
        "qos": "0",
        "datatype": "auto",
        "broker": "a0e631b8.d383b",
        "x": 170,
        "y": 2706,
        "wires": [
            [
                "222cf8a.db51b08"
            ]
        ]
    },
    {
        "id": "821d2e1a.d0244",
        "type": "ui_gauge",
        "z": "1d22c714.e50369",
        "name": "Water level",
        "group": "6c15eb0d.8f5814",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "wave",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1030,
        "y": 1346,
        "wires": []
    },
    {
        "id": "b1c0fbbf.8e9c58",
        "type": "influxdb out",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "",
        "measurement": "water_level",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 860,
        "y": 1386,
        "wires": []
    },
    {
        "id": "ce4f2657.0c3588",
        "type": "delay",
        "z": "1d22c714.e50369",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 1426,
        "wires": [
            [
                "f0da22f5.a0782"
            ]
        ]
    },
    {
        "id": "8e23d689.2cf748",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Parse telemetry JSON",
        "func": "\nvar newMsg =  { \n        payload: new Date(msg.payload[0].time)\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 1426,
        "wires": [
            [
                "62029373.97ee9c"
            ]
        ]
    },
    {
        "id": "f0da22f5.a0782",
        "type": "influxdb in",
        "z": "1d22c714.e50369",
        "influxdb": "8193652c.e6bda8",
        "name": "Select last entry",
        "query": "SELECT * FROM water_level GROUP BY * ORDER BY DESC LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 920,
        "y": 1426,
        "wires": [
            [
                "8e23d689.2cf748"
            ]
        ]
    },
    {
        "id": "62029373.97ee9c",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "6c15eb0d.8f5814",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "Last refresh - water level",
        "label": "",
        "format": "<i class=\"fa fa-refresh\" aria-hidden=\"true\">&nbsp; {{ msg.payload | date: 'HH:mm:ss'}}</i> ",
        "layout": "row-center",
        "x": 1410,
        "y": 1426,
        "wires": []
    },
    {
        "id": "4c00e295.9a2f5c",
        "type": "inject",
        "z": "5127740.f28848c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2700",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "1b07e4d1.7c4d9b"
            ]
        ]
    },
    {
        "id": "f76a168.49897e8",
        "type": "function",
        "z": "5127740.f28848c",
        "name": "Simulate an input",
        "func": "msg.payload = \"PH too low\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 260,
        "wires": [
            [
                "f3e2c3ad.8ebb2"
            ]
        ]
    },
    {
        "id": "5d9dc44f.a6cccc",
        "type": "switch",
        "z": "5127740.f28848c",
        "name": "PPM conditions, min and max values",
        "property": "payload[0].mean",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "maxPPM",
                "vt": "global"
            },
            {
                "t": "lt",
                "v": "minPPM",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "78ee2d93.0854e4"
            ],
            [
                "7485b5.c5f5ca4c"
            ]
        ]
    },
    {
        "id": "78ee2d93.0854e4",
        "type": "function",
        "z": "5127740.f28848c",
        "name": "Simulate an input",
        "func": "msg.payload = \"PPM too high\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 344,
        "wires": [
            [
                "7ebdaedb.473e9"
            ]
        ]
    },
    {
        "id": "6b31749d.19ee4c",
        "type": "influxdb in",
        "z": "5127740.f28848c",
        "influxdb": "8193652c.e6bda8",
        "name": "Mean PPM over last 20min",
        "query": "SELECT mean(value) FROM water_quality WHERE time >= now() - 20m",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "5d9dc44f.a6cccc"
            ]
        ]
    },
    {
        "id": "7ebdaedb.473e9",
        "type": "ui_toast",
        "z": "5127740.f28848c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Water PPM",
        "name": "Alert ",
        "x": 1010,
        "y": 364,
        "wires": []
    },
    {
        "id": "7485b5.c5f5ca4c",
        "type": "function",
        "z": "5127740.f28848c",
        "name": "Simulate an input",
        "func": "msg.payload = \"PPM too low\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 404,
        "wires": [
            [
                "7ebdaedb.473e9"
            ]
        ]
    },
    {
        "id": "4c35d949.85d758",
        "type": "file",
        "z": "87cb301d.9893c",
        "name": "WriteFile",
        "filename": "/home/pi/.node-red/projects/hydro/time-scheduler.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 601,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "6705ebab.d4f8a4",
        "type": "inject",
        "z": "87cb301d.9893c",
        "name": "FireAfterReboot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 46,
        "wires": [
            [
                "8dafbb4d.b18898"
            ]
        ]
    },
    {
        "id": "8dafbb4d.b18898",
        "type": "file in",
        "z": "87cb301d.9893c",
        "name": "ReadFile",
        "filename": "/home/pi/.node-red/projects/hydro/time-scheduler.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 360,
        "y": 46,
        "wires": [
            [
                "28cc1585.a3940a"
            ]
        ]
    },
    {
        "id": "28cc1585.a3940a",
        "type": "ui_time_scheduler",
        "z": "87cb301d.9893c",
        "group": "72b67add.961f74",
        "name": "Scheduler",
        "startDay": "1",
        "refresh": 60,
        "devices": [
            "Grow lights",
            "Water spray",
            "Water pump"
        ],
        "customPayload": false,
        "eventMode": true,
        "outputs": 4,
        "order": 1,
        "width": 8,
        "height": 1,
        "x": 340,
        "y": 280,
        "wires": [
            [
                "4c35d949.85d758"
            ],
            [
                "df864faf.11005"
            ],
            [
                "c1e51a25.bcd2f8"
            ],
            []
        ]
    },
    {
        "id": "23810c02.07fa14",
        "type": "inject",
        "z": "5127740.f28848c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2700",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 132,
        "y": 326,
        "wires": [
            [
                "6b31749d.19ee4c"
            ]
        ]
    },
    {
        "id": "10e9a27.bb9f05e",
        "type": "comment",
        "z": "87cb301d.9893c",
        "name": "### Nutriments controler ###",
        "info": "",
        "x": 220,
        "y": 500,
        "wires": []
    },
    {
        "id": "bb16ff0b.197e6",
        "type": "persist out",
        "z": "87cb301d.9893c",
        "name": "nutrimentsSolutionATimer",
        "storageNode": "217cc961.603ce6",
        "x": 590,
        "y": 620,
        "wires": [
            [
                "cf53cc34.c3564"
            ]
        ]
    },
    {
        "id": "cf53cc34.c3564",
        "type": "function",
        "z": "87cb301d.9893c",
        "name": "msg.delay",
        "func": "var newMsg = { delay: (msg.payload * 1000) };\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 620,
        "wires": [
            [
                "5d2f5ff2.180c5"
            ]
        ]
    },
    {
        "id": "84888512.5d3ad8",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Configure PH sectors",
        "func": "var minPH = global.get('minPH') || 0;\nvar maxPH = global.get('maxPH') || 0;\nvar centerPH = parseInt((minPH + maxPH) / 2);\n\nvar newSectors = [\n    {t:\"min\",val:0,col:\"#ff5252\",dot:0},\n    {t:\"sec\",val:minPH,col:\"#4CAF50\",dot:2},\n    {t:\"sec\",val:maxPH,col:\"#ff5252\",dot:2},\n    {t:\"max\",val:10,col:\"#ff5252\",dot:0}] \n\n\nmsg.control = \n  {sectors:newSectors, center: centerPH}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1126,
        "wires": [
            [
                "4d58abb1.177e64"
            ]
        ]
    },
    {
        "id": "b2d124cc.ae5b18",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Configure PPM sectors",
        "func": "var minPPM = global.get('minPPM') || 0;\nvar maxPPM = global.get('maxPPM') || 0;\nvar centerPPM = parseInt((minPPM + maxPPM) / 2);\n\nvar newSectors = [\n    {t:\"min\",val:0,col:\"#ff5252\",dot:0},\n    {t:\"sec\",val:minPPM,col:\"#4CAF50\",dot:0},\n    {t:\"sec\",val:maxPPM,col:\"#ff5252\",dot:0},\n    {t:\"max\",val:1500,col:\"#ff5252\",dot:0}] \n\n\nmsg.control = \n  {sectors:newSectors, center: centerPPM}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 546,
        "wires": [
            [
                "63de4a5e.7c19a4"
            ]
        ]
    },
    {
        "id": "57e4ad43.c33774",
        "type": "persist out",
        "z": "87cb301d.9893c",
        "name": "waterSprayTimer",
        "storageNode": "217cc961.603ce6",
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "77dd4f6a.f114"
            ]
        ]
    },
    {
        "id": "77dd4f6a.f114",
        "type": "function",
        "z": "87cb301d.9893c",
        "name": "msg.delay",
        "func": "var newMsg = { delay: (msg.payload * 1000) };\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1310,
        "y": 400,
        "wires": [
            [
                "b9dd843.3247178"
            ]
        ]
    },
    {
        "id": "457aff73.050d9",
        "type": "comment",
        "z": "5127740.f28848c",
        "name": "### Adjust PH rule",
        "info": "",
        "x": 150,
        "y": 80,
        "wires": []
    },
    {
        "id": "9bfd2d56.7eae1",
        "type": "comment",
        "z": "5127740.f28848c",
        "name": "### Adjust PPM rule",
        "info": "",
        "x": 150,
        "y": 280,
        "wires": []
    },
    {
        "id": "b8023ba0.969078",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Configure water level widget",
        "func": "msg.payload = parseInt(msg.payload * 100 / 7);\nvar thresholdMin = global.get('seedTray.water.level.threshold.low');\nvar thresholdMax = global.get('seedTray.water.level.threshold.high');\n\n\nmsg.ui_control = {options: {\n    textColor:\"#FFFFFF\", \n    waveTextColor:\"#FFFFFF\", \n    textSize: 0.7,\n    textVertPosition: .6,\n    displayPercent: true,\n    waveColor: \n        (msg.payload > thresholdMin && msg.payload < thresholdMax) ? \"#0077be\" : \"#cc3300\",\n    //waveAnimate: true,\n    //waveAnimateTime: 200000,\n    //waveCount: 3,\n    waveOffset: 0.25,\n    circleThickness: 0.05,\n    circleColor:(msg.payload > thresholdMin && msg.payload < thresholdMax) ? \"#0077be\" : \"#cc3300\",\n    valueCountUp: false // disable count up upon loading \n\n }\n};\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1346,
        "wires": [
            [
                "821d2e1a.d0244"
            ]
        ]
    },
    {
        "id": "da7d1a1e.239e58",
        "type": "kasa",
        "z": "87cb301d.9893c",
        "name": "Hydroponic - Water pump  - HS105(JP)",
        "device": "10.0.0.12",
        "interval": 60000,
        "eventInterval": 15000,
        "payload": "getInfo",
        "payloadType": "info",
        "debug": false,
        "x": 490,
        "y": 2000,
        "wires": [
            [
                "652a6ac7.e928e4",
                "2f179774.4055e8"
            ]
        ]
    },
    {
        "id": "d9cef345.e508b",
        "type": "comment",
        "z": "87cb301d.9893c",
        "name": "### Hydro solution ###",
        "info": "",
        "x": 300,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6c1d8e8.c6bf77",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Save Global variable - total natural light",
        "func": "var sunrise = new Date(msg.payload.current.sunrise);\nvar sunset = new Date(msg.payload.current.sunset);\nvar totalNaturalLight = sunset - sunrise;\n\nglobal.set('sunrise.timestamp', msg.payload.current.sunrise*1000);\nglobal.set('sunset.timestamp', msg.payload.current.sunset*1000);\nglobal.set('sun.total', totalNaturalLight);\n\nmsg.payload = totalNaturalLight;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 406,
        "wires": [
            [
                "15bc06eb.0cde59"
            ]
        ]
    },
    {
        "id": "7b62dc10.8cd624",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Compute day light, LED and dark duration",
        "func": "var timestampSunLight = global.get('sun.total'); // in seconds\nvar totalLight = global.get('seed.totalLight') * 60 * 60; // in seconds\n\nvar ledLight = totalLight - timestampSunLight; // total seconds needs \n// Save timer off time (sunset + duration)\nglobal.set('seedTray.led.timer.off', global.get('sunset.timestamp') + ledLight * 1000);\n\nvar darkMode = 24*60*60 - totalLight;\n\nfunction format(time) {   \n    // Hours, minutes and seconds\n    var hrs = ~~(time / 3600);\n    var mins = ~~((time % 3600) / 60);\n\n    // Output like \"1:01\" or \"4:03\" or \"123:03\"\n    var ret = \"\";\n    if (hrs > 0) {\n        ret += \"\" + hrs + \" hr \"; \n        if (mins > 0) {\n            ret += (mins < 10 ? \"0\" : \"\") + mins ;\n        }\n    } else {\n        if (mins > 0) {\n            ret = (mins < 10 ? \"0\" : \"\") + mins;\n        }\n    }\n    return ret;\n}\n\nvar labelsMsg = {\"payload\": \n    [\n        {\n            \"title\": \"Sun\",\n            \"description\": format(timestampSunLight),\n            \"icon_name\": \"wi wi-owm-01d\",\n            \"hexColor\": \"#FF7F18\",\n            \"start\": global.get('sunrise.timestamp'),\n            \"end\": \"\",\n        }, \n        {  \n            \"title\": \"Led\",\n            \"description\": format(ledLight),\n            \"icon_name\": \"fa fa-lightbulb-o\",\n            \"hexColor\": global.get('color.widget.light.led'),\n            \"start\": \"\",\n            \"end\": \"\",\n        },\n        {\n            \"title\" : \"Dark\",\n            \"description\": format(darkMode),\n            \"icon_name\": \"fa fa-moon-o\",\n            \"start\": \"\"\n        }\n    ]\n};\n\n\nvar m = {};\nm.labels = [\"Sun light\", \"LED\", \"Darks\"];\nm.data = [[timestampSunLight, ledLight, darkMode]];\nm.series = [\"Total light\"];\nmsg.payload = [m];\nmsg.topic = \"\";\n\n\nreturn [labelsMsg,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 2206,
        "wires": [
            [
                "e765c1ba.7b85",
                "a9374d16.74677"
            ],
            [
                "abb9ac18.9b28d"
            ]
        ]
    },
    {
        "id": "15bc06eb.0cde59",
        "type": "link out",
        "z": "1d22c714.e50369",
        "name": "Global var - Total day light",
        "links": [
            "de54877b.8ab618",
            "319aa41.d00645c"
        ],
        "x": 1095,
        "y": 406,
        "wires": []
    },
    {
        "id": "de54877b.8ab618",
        "type": "link in",
        "z": "1d22c714.e50369",
        "name": "",
        "links": [
            "15bc06eb.0cde59"
        ],
        "x": 95,
        "y": 2166,
        "wires": [
            [
                "7b62dc10.8cd624"
            ]
        ]
    },
    {
        "id": "abb9ac18.9b28d",
        "type": "ui_chart",
        "z": "1d22c714.e50369",
        "name": "Pi char - Light split",
        "group": "45199dde.854f64",
        "order": 1,
        "width": 4,
        "height": 4,
        "label": "",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "75",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f18",
            "#ffc30b",
            "#d9d9d9",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 610,
        "y": 2239,
        "wires": [
            []
        ]
    },
    {
        "id": "3dfc5ff2.440c6",
        "type": "link in",
        "z": "1d22c714.e50369",
        "name": "",
        "links": [
            "a3e3f133.15036",
            "304a2fa1.758d7"
        ],
        "x": 95,
        "y": 2266,
        "wires": [
            [
                "7b62dc10.8cd624"
            ]
        ]
    },
    {
        "id": "e765c1ba.7b85",
        "type": "ui_template",
        "z": "1d22c714.e50369",
        "group": "45199dde.854f64",
        "name": "",
        "order": 3,
        "width": 3,
        "height": 3,
        "format": "<md-list style=\"margin-top:0px;\">\n  <md-list-item style=\"padding-bottom:15px;padding-left:10px;max-height:17px;min-height:0px;\"\n   ng-repeat = \"(index, item) in msg.payload\">\n        <div class=\"md-list-item-text compact\">\n          <font color=\"{{item.hexColor}}\"> \n              <i class=\"{{item.icon_name}}\"> </i> \n               {{item.title}} {{item.description}}\n          </font> \n        \n        </div>\n       \n </md-list-item>\n \n</md-list>\n\n<md-divider></md-divider>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 580,
        "y": 2159,
        "wires": [
            []
        ]
    },
    {
        "id": "bde231de.d54eb",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Set color",
        "func": "msg.color = (msg.payload == \"true\") ? global.get(\"color.widget.water\") : \"grey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 2406,
        "wires": [
            [
                "b2382129.49d1f"
            ]
        ]
    },
    {
        "id": "b2382129.49d1f",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "6c15eb0d.8f5814",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "Water spray on/off state",
        "label": "<font color=\"{{msg.color}}\"><i class=\"fa fa-tint fa-2x\"></i></front>",
        "format": "",
        "layout": "row-spread",
        "x": 550,
        "y": 2406,
        "wires": []
    },
    {
        "id": "f3b66e1d.ccca9",
        "type": "template",
        "z": "1d22c714.e50369",
        "name": "Water widget - status",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<font face=\"Roboto\">\n\n{{#global.seedTray.water.level.warning.low}}\n <font color=\"{{global.color.warning}}\" align=\"center\"> <i class=\"fa fa-exclamation-circle\"></i> Water level is too low.</font>\n{{/global.seedTray.water.level.warning.low}} \n\n{{#global.seedTray.water.level.warning.high}}\n <font color=\"{{global.color.warning}}\" align=\"center\"> <i class=\"fa fa-exclamation-circle\"></i> Water level is too high.</font>\n{{/global.seedTray.water.level.warning.high}} \n\n  \n<br/><br/>\n\npump runs for <font color=\"{{global.color.widget.water}}\"> {{global.durationWaterSpray}}</font> \nseconds every  <font color=\"{{global.color.widget.water}}\">two days</font>\n</font>\n<br/><br/><br/>\n<hr>",
        "output": "str",
        "x": 400,
        "y": 2466,
        "wires": [
            [
                "f64b20c.caba7e"
            ]
        ]
    },
    {
        "id": "f64b20c.caba7e",
        "type": "ui_template",
        "z": "1d22c714.e50369",
        "group": "6c15eb0d.8f5814",
        "name": "",
        "order": 2,
        "width": 4,
        "height": 2,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 580,
        "y": 2466,
        "wires": [
            []
        ]
    },
    {
        "id": "441e548d.39500c",
        "type": "inject",
        "z": "1d22c714.e50369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2466,
        "wires": [
            [
                "f3b66e1d.ccca9"
            ]
        ]
    },
    {
        "id": "593527d0.c1f528",
        "type": "link in",
        "z": "1d22c714.e50369",
        "name": "Refresh template seed tray water",
        "links": [
            "bbae5ec0.7849",
            "bec62e16.5d9dc",
            "3339466d.6d58aa"
        ],
        "x": 175,
        "y": 2526,
        "wires": [
            [
                "f3b66e1d.ccca9"
            ]
        ]
    },
    {
        "id": "a150ea22.90b8b8",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Global var water level",
        "func": "global.set(\"seedTray.water.level.current\", parseInt(msg.payload * 100 / 7));\n\nif (global.get(\"seedTray.water.level.current\") < global.get('seedTray.water.level.threshold.low')) {\n    global.set(\"seedTray.water.level.warning.low\", true);\n} else {\n    global.set(\"seedTray.water.level.warning.low\", undefined);\n}\n\nif (global.get(\"seedTray.water.level.current\") > global.get('seedTray.water.level.threshold.high')) {\n    global.set(\"seedTray.water.level.warning.high\", true);\n} else {\n    global.set(\"seedTray.water.level.warning.high\", undefined);\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1306,
        "wires": [
            [
                "bec62e16.5d9dc"
            ]
        ]
    },
    {
        "id": "bec62e16.5d9dc",
        "type": "link out",
        "z": "1d22c714.e50369",
        "name": "",
        "links": [
            "593527d0.c1f528"
        ],
        "x": 935,
        "y": 1306,
        "wires": []
    },
    {
        "id": "459f17b4.d47398",
        "type": "debug",
        "z": "1d22c714.e50369",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1246,
        "wires": []
    },
    {
        "id": "a9374d16.74677",
        "type": "file in",
        "z": "1d22c714.e50369",
        "name": "ReadFile",
        "filename": "/home/pi/.node-red/projects/hydro/time-scheduler.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 580,
        "y": 2199,
        "wires": [
            [
                "ed8e6bb5.af6b78"
            ]
        ]
    },
    {
        "id": "ed8e6bb5.af6b78",
        "type": "json",
        "z": "1d22c714.e50369",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 2199,
        "wires": [
            [
                "d82e4b39.5671a8"
            ]
        ]
    },
    {
        "id": "d82e4b39.5671a8",
        "type": "change",
        "z": "1d22c714.e50369",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.timers[0].starttime",
                "pt": "msg",
                "to": "sunset.timestamp",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.timers[2].starttime",
                "pt": "msg",
                "to": "seedTray.led.timer.off",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 2199,
        "wires": [
            [
                "bd0f3b34.8fff68"
            ]
        ]
    },
    {
        "id": "bd0f3b34.8fff68",
        "type": "file",
        "z": "1d22c714.e50369",
        "name": "WriteFile",
        "filename": "/home/pi/.node-red/projects/hydro/time-scheduler.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1040,
        "y": 2199,
        "wires": [
            [
                "84752e32.a3167"
            ]
        ]
    },
    {
        "id": "84752e32.a3167",
        "type": "link out",
        "z": "1d22c714.e50369",
        "name": "Configure seed led scheduler",
        "links": [
            "3ca07431.002fec"
        ],
        "x": 1135,
        "y": 2199,
        "wires": []
    },
    {
        "id": "3ca07431.002fec",
        "type": "link in",
        "z": "87cb301d.9893c",
        "name": "",
        "links": [
            "84752e32.a3167"
        ],
        "x": 205,
        "y": 100,
        "wires": [
            [
                "8dafbb4d.b18898"
            ]
        ]
    },
    {
        "id": "a65b9b7d.ea9428",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8a9b009f.1b35d",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "Seed tray label",
        "label": "<h3><i class=\"fa fa-leaf\"> Seed tray</h3>",
        "format": "",
        "layout": "row-left",
        "x": 1080,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6d71a0d6.512c",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8a9b009f.1b35d",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "Room sensors label",
        "label": "<h3>Room<h3>",
        "format": "",
        "layout": "row-left",
        "x": 880,
        "y": 1840,
        "wires": []
    },
    {
        "id": "aadaca25.5f3598",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "order": 13,
        "width": 1,
        "height": 1,
        "name": "Nutriments A pump on/off state",
        "label": "<font color=\"{{msg.color}}\"><i class=\"fa fa-battery-half fa-1.5x\"></i></front>",
        "format": "",
        "layout": "row-spread",
        "x": 550,
        "y": 2706,
        "wires": []
    },
    {
        "id": "222cf8a.db51b08",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Set color",
        "func": "msg.color = (msg.payload == \"true\") ? global.get('color.widget.nutrients') : \"grey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 2706,
        "wires": [
            [
                "aadaca25.5f3598"
            ]
        ]
    },
    {
        "id": "40258950.e35d68",
        "type": "delay",
        "z": "87cb301d.9893c",
        "name": "",
        "pauseType": "delayv",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 960,
        "y": 880,
        "wires": [
            [
                "a5c49cb5.f3459"
            ]
        ]
    },
    {
        "id": "bf2def54.05791",
        "type": "mqtt out",
        "z": "87cb301d.9893c",
        "name": "Nutriments B",
        "topic": "hydro/nutrimentsB/switch",
        "qos": "0",
        "retain": "",
        "broker": "a0e631b8.d383b",
        "x": 490,
        "y": 800,
        "wires": []
    },
    {
        "id": "a5c49cb5.f3459",
        "type": "change",
        "z": "87cb301d.9893c",
        "name": "Switch to off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 880,
        "wires": [
            [
                "d977f79c.7973f8"
            ]
        ]
    },
    {
        "id": "b29a1551.343db8",
        "type": "switch",
        "z": "87cb301d.9893c",
        "name": "When nutriments spray on",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 880,
        "wires": [
            [
                "62da8d4e.c4ff24"
            ]
        ]
    },
    {
        "id": "d977f79c.7973f8",
        "type": "ui_switch",
        "z": "87cb301d.9893c",
        "name": "Solution B switch",
        "label": "Sol. B",
        "tooltip": "",
        "group": "8d4aab9b.4d6328",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-toggle-on fa-2x",
        "oncolor": "#bb86fc",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-toggle-off fa-2x",
        "offcolor": "#bb86fc",
        "x": 290,
        "y": 800,
        "wires": [
            [
                "b29a1551.343db8",
                "bf2def54.05791"
            ]
        ]
    },
    {
        "id": "62da8d4e.c4ff24",
        "type": "persist out",
        "z": "87cb301d.9893c",
        "name": "nutrimentsSolutionBTimer",
        "storageNode": "217cc961.603ce6",
        "x": 590,
        "y": 880,
        "wires": [
            [
                "33f73a9b.f300e6"
            ]
        ]
    },
    {
        "id": "33f73a9b.f300e6",
        "type": "function",
        "z": "87cb301d.9893c",
        "name": "msg.delay",
        "func": "var newMsg = { delay: (msg.payload * 1000) };\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 880,
        "wires": [
            [
                "40258950.e35d68"
            ]
        ]
    },
    {
        "id": "7ce85211.37278c",
        "type": "mqtt in",
        "z": "1d22c714.e50369",
        "name": "",
        "topic": "hydro/nutrimentsB/s",
        "qos": "0",
        "datatype": "auto",
        "broker": "a0e631b8.d383b",
        "x": 170,
        "y": 2786,
        "wires": [
            [
                "41226553.28e86c"
            ]
        ]
    },
    {
        "id": "94ff4603.6d4ad8",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "order": 18,
        "width": 1,
        "height": 1,
        "name": "Nutriments B pump on/off state",
        "label": "<font color=\"{{msg.color}}\"><i class=\"fa fa-battery-half fa-1.5x\"></i></front>",
        "format": "",
        "layout": "row-spread",
        "x": 550,
        "y": 2786,
        "wires": []
    },
    {
        "id": "41226553.28e86c",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Set color",
        "func": "msg.color = (msg.payload == \"true\") ? global.get(\"color.widget.nutrients\") : \"grey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 2786,
        "wires": [
            [
                "94ff4603.6d4ad8"
            ]
        ]
    },
    {
        "id": "610e2b65.b070d4",
        "type": "ui_template",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "name": "",
        "order": 1,
        "width": 4,
        "height": 3,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 600,
        "y": 2646,
        "wires": [
            []
        ]
    },
    {
        "id": "5e5c80d7.c23cb",
        "type": "template",
        "z": "1d22c714.e50369",
        "name": "Nutrients widget - status",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<md-card>\n  <div md-card-image class=\"example-header-image\"></div>\n  <md-card-content>\n    <p>\n      Solution A pump runs for <font color=\"#bb86fc\"> {{global.nutriments.solutionA.pump.duration}} secs.</font>  \n      when PPM is below  <font color=\"#bb86fc\">{{global.minPPM}}</font>\n    </p>\n  </md-card-content>\n</md-card>",
        "output": "str",
        "x": 410,
        "y": 2646,
        "wires": [
            [
                "610e2b65.b070d4"
            ]
        ]
    },
    {
        "id": "ae81222a.8201",
        "type": "inject",
        "z": "1d22c714.e50369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2646,
        "wires": [
            [
                "5e5c80d7.c23cb"
            ]
        ]
    },
    {
        "id": "de2dff01.cd507",
        "type": "inject",
        "z": "1d22c714.e50369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 150,
        "y": 2906,
        "wires": [
            [
                "4d67ced7.a6caa"
            ]
        ]
    },
    {
        "id": "4d67ced7.a6caa",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "order": 14,
        "width": 2,
        "height": 1,
        "name": "Solution A - remaining days gauge",
        "icon": "",
        "label": "",
        "unit": "days left",
        "layout": "linear",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "20,10,round",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "sectors": [
            {
                "val": 0,
                "col": "#bb86fc",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5,
                "col": "#bb86fc",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 10,
                "col": "#bb86fc",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#bb86fc",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 340,
        "y": 2946,
        "wires": []
    },
    {
        "id": "8944b818.cab738",
        "type": "comment",
        "z": "1d22c714.e50369",
        "name": "##TODO compute remaining days",
        "info": "",
        "x": 370,
        "y": 2886,
        "wires": []
    },
    {
        "id": "d8de2deb.a328c",
        "type": "inject",
        "z": "1d22c714.e50369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 130,
        "y": 2986,
        "wires": [
            [
                "a56914d1.b859b8"
            ]
        ]
    },
    {
        "id": "a56914d1.b859b8",
        "type": "ui_artlessgauge",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "order": 19,
        "width": 2,
        "height": 1,
        "name": "Solution B - remaining days gauge",
        "icon": "",
        "label": "",
        "unit": "days left",
        "layout": "linear",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "20,10, round",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "sectors": [
            {
                "val": 0,
                "col": "#bb86fc",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5,
                "col": "#bb86fc",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 10,
                "col": "#bb86fc",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 25,
                "col": "#bb86fc",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 320,
        "y": 3026,
        "wires": []
    },
    {
        "id": "80ecf0e1.ea61b",
        "type": "link in",
        "z": "1d22c714.e50369",
        "name": "",
        "links": [
            "45c5f9a0.355c58",
            "1b0ae6f9.985959"
        ],
        "x": 235,
        "y": 2606,
        "wires": [
            [
                "5e5c80d7.c23cb"
            ]
        ]
    },
    {
        "id": "39f4667d.55b9da",
        "type": "mqtt in",
        "z": "87cb301d.9893c",
        "name": "",
        "topic": "hydro/lamp/s",
        "qos": "0",
        "datatype": "auto",
        "broker": "a0e631b8.d383b",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "d7d0c829.e9cc28"
            ]
        ]
    },
    {
        "id": "a94198ff.eef948",
        "type": "ui_text",
        "z": "87cb301d.9893c",
        "group": "45199dde.854f64",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "LED on/off state",
        "label": "<font color=\"{{msg.color}}\"><i class=\"fa  fa-lightbulb-o fa-2x\"></i></front>",
        "format": "",
        "layout": "row-right",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "6de36e52.d849c",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Configure hours sectors",
        "func": "function getSecondsSinceMidnight(timestamp) {   \n    \n    return new Date(timestamp).getHours() * 3600 +\n           new Date(timestamp).getMinutes() * 60 +\n           new Date(timestamp).getSeconds();\n}\n\nvar sunrise = getSecondsSinceMidnight(global.get('sunrise.timestamp'));\nvar sunset = getSecondsSinceMidnight(global.get('sunset.timestamp'));\nvar endLed = getSecondsSinceMidnight(global.get('seedTray.led.timer.off'));\n\nvar newSectors = [\n    {t:\"min\",val:sunrise,col:\"#FF7F18\",dot:0},\n    {t:\"sec\",val:sunset,col:\"#F3DF5E\",dot:0},\n    {t:\"sec\",val:endLed,col:\"#F3DF5E\",dot:0},\n    {t:\"max\",val:sunrise+24*3600,col:\"grey\",dot:0}] \n\n\nmsg.control = \n  {sectors:newSectors}\n  \nmsg.payload = getSecondsSinceMidnight(Date.now()) + 24*60*60;\n\nmsg.label = \"12h30\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 2306,
        "wires": [
            []
        ]
    },
    {
        "id": "d773ba07.879918",
        "type": "inject",
        "z": "1d22c714.e50369",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "50",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 2306,
        "wires": [
            [
                "6de36e52.d849c"
            ]
        ]
    },
    {
        "id": "71624601.36eb68",
        "type": "ui_template",
        "z": "1d22c714.e50369",
        "group": "65d119b5.66cb78",
        "name": "Water PH scale",
        "order": 4,
        "width": 7,
        "height": 2,
        "format": "<!--  <style>\n    .icon_div {\n        position: absolute;\n        width: 44px;\n        height: 44px;\n        margin: auto;\n        text-align: center;\n        overflow: hidden;\n        text-align: center;\n        top: 50%;\n        transform: translateY(-95%);\n    }\n   \n</style>\n\n-->\n  \n  <!-- <span class=\"icon_div\" style=\"color:#994fda\" >\n      <i data-fa-symbol=\"phIcon\" class=\"fa fa-lemon-o\"></i>\n  </span> -->\n\n  <svg id=\"meter\">\n     \n     <!-- <text x=\"35\" y =\"20\" fill=\"#994fda\" \n     font-family=\"Montserrat\" font-size=\"1.1em\">\n         PH Level</text> -->\n\n    <g ng-repeat=\"(key, value) in phScale\">\n      \n      <rect x=\"{{value.xpos}}\" \n           y=\"{{value.ypos}}\"\n           width=\"{{value.width}}\" height=\"{{value.height}}\" style=\"fill:{{value.hexColor}}\"  />\n       \n       <text x=\"{{value.xpos+value.width/2}}\" y=\"{{value.ypos+value.height/2}}\" dominant-baseline=\"central\" text-anchor=\"middle\"\n            font-size=\"14\" stroke-width=\"0\" stroke=\"#000\"\n            fill=\"#f9fcfb\" font-family=\"Montserrat\" font-weight=\"bold\">{{value.title}}</text>\n    </g>\n    \n    <polyline fill=\"none\" stroke=\"#389f76\" stroke-width=\"2\" \n            points=\"{{sectorXMinPH}},{{sectorPhY-2}} \n                    {{sectorXMinPH}},{{sectorPhY-6}} \n                    {{sectorXMaxPH}},{{sectorPhY-6}} \n                    {{sectorXMaxPH}},{{sectorPhY-2}}\" />\n    <g>               \n        <polygon fill=\"{{currentPhColor}}\" stroke=\"{{currentPhColor}}\" stroke-width=\"1\" \n            points=\"{{XcurrentPH}},{{YcurrentPH}}\n                    {{XcurrentPH-triangleSize}},{{YcurrentPH+triangleSize}}\n                    {{XcurrentPH+triangleSize}},{{YcurrentPH+triangleSize}}\"/>\n\n         <text x=\"{{XcurrentPH}}\" y=\"{{YcurrentPH+triangleSize}}\" \n                baseline-shift=\"-23px\" \n                text-anchor=\"middle\"\n                fill=\"{{currentPhColor}}\" font-family=\"Montserrat\" \n                font-size=\"1.5em\" >{{currentPHValue}}\n                \n        </text>\n        \n        <text x=\"{{XcurrentPH}}\" y=\"{{YcurrentPH+triangleSize}}\" \n              dx=\"9%\" baseline-shift=\"-23px\"  text-anchor=\"start\" \n              alignment-baseline=\"bottom\" fill=\"{{currentPhColor}}\" \n              font-size=\"1em\" font-family=\"Montserrat\">{{currentPhStatus}}</text>\n       \n    </g> \n  </svg>\n\n\n<script>\n    \n(function(scope) {\n    \n     scope.phScale = \n        [{\n            \"title\": \"1\",\n            \"hexColor\": \"#ec5656\",\n            \"level\": \"Acidic\"\n        }, \n        {  \n            \"title\": \"2\",\n            \"hexColor\": \"#f49a50\",\n            \"level\": \"Acidic\"\n        },\n        {\n            \"title\": \"3\",\n            \"hexColor\": \"#f2c957\",\n            \"level\": \"Acidic\"\n        },\n        {  \n            \"title\": \"4\",\n            \"hexColor\": \"#9dc248\",\n            \"level\": \"Acidic\"\n        },\n        {  \n            \"title\": \"5\",\n            \"hexColor\": \"#1dae68\",\n            \"level\": \"Acidic\"\n        },\n        {  \n            \"title\": \"6\",\n            \"hexColor\": \"#4bb752\",\n            \"level\": \"Acidic\"\n        },\n        {  \n            \"title\": \"7\",\n            \"hexColor\": \"#3d9e7a\",\n            \"level\": \"Neutral\"\n        },\n        {  \n            \"title\": \"8\",\n            \"hexColor\": \"#316784\",\n            \"level\": \"Base\"\n        },\n        {  \n            \"title\": \"9\",\n            \"hexColor\": \"#325aa9\",\n            \"level\": \"Base\"\n        },\n        {  \n            \"title\": \"10\",\n            \"hexColor\": \"#9a53dd\",\n            \"level\": \"Base\"\n        },\n        {  \n            \"title\": \"11+\",\n            \"hexColor\": \"#571f82\",\n            \"level\": \"Base\"\n        }]; \n    \n    // $watch fires each time the node is triggered in the flow\n    scope.$watch('msg', function(msg) {\n        \n        var phWidth = 25, phHeight = 25;\n        var phInitialPadding = 25;\n        var phSpacing = 3;\n        var phYpos = 15;\n        \n        \n        \n        angular.forEach(scope.phScale, function (value, key) {\n            \n            value[\"xpos\"] = key * phWidth + key * phSpacing + phInitialPadding;\n            value[\"ypos\"] = phYpos;\n            value[\"width\"] = phWidth; \n            value[\"height\"]= phHeight; \n            \n        });\n        \n        var sectorMinPh = msg.minPH;\n        var sectorMaxPh = msg.maxPH;\n        \n        if (sectorMaxPh >= 12) {\n            sectorMaxPh = 11.9;\n        }\n        \n        \n        scope.sectorXMinPH = (Math.floor(sectorMinPh)-1) * phWidth + (Math.floor(sectorMinPh)-1) * phSpacing + phInitialPadding + ((sectorMinPh % 1) * phWidth);\n        scope.sectorXMaxPH = (Math.floor(sectorMaxPh)-1) * phWidth + (Math.floor(sectorMaxPh)-1) * phSpacing + phInitialPadding + ((sectorMaxPh % 1) * phWidth);\n        scope.sectorPhY = phYpos;\n        \n        // Find PH or default to 7 (it happens when updating min or max PH sectors)\n        scope.currentPHValue = (msg.payload) ? Number.parseFloat(msg.payload).toFixed(2) : 7;\n        scope.XcurrentPH = (Math.floor(scope.currentPHValue)-1) * phWidth + (Math.floor(scope.currentPHValue)-1) * phSpacing + phInitialPadding + ((scope.currentPHValue % 1) * phWidth);\n        scope.YcurrentPH = phYpos + phHeight + 5;\n        scope.triangleSize = 4;\n        \n\n        if (scope.currentPHValue >= sectorMinPh && scope.currentPHValue <= sectorMaxPh) { \n            scope.currentPhStatus = \"Optimal\";\n            scope.currentPhColor = \"#42a37a\";\n        } else {\n            scope.currentPhStatus = scope.phScale[Math.floor(scope.currentPHValue) + 1][\"level\"];\n            scope.currentPhColor = \"#ec3d49\";\n        }\n        \n        \n    });\n\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1080,
        "y": 1086,
        "wires": [
            []
        ]
    },
    {
        "id": "eb2d470b.714558",
        "type": "comment",
        "z": "1d22c714.e50369",
        "name": "##TODO SVG to repreent sunrise, led and moon",
        "info": "",
        "x": 350,
        "y": 2286,
        "wires": []
    },
    {
        "id": "ea0e311d.857dc",
        "type": "function",
        "z": "1d22c714.e50369",
        "name": "Pass min and max PH (global var)",
        "func": "msg.minPH = global.get('minPH') || 0;\nmsg.maxPH = global.get('maxPH') || 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 1086,
        "wires": [
            [
                "71624601.36eb68"
            ]
        ]
    },
    {
        "id": "d8805062.990f5",
        "type": "link in",
        "z": "1d22c714.e50369",
        "name": "Push new min and max PH",
        "links": [
            "4bc5ba0b.116334",
            "f334d767.83e348"
        ],
        "x": 665,
        "y": 1046,
        "wires": [
            [
                "ea0e311d.857dc"
            ]
        ]
    },
    {
        "id": "d7d0c829.e9cc28",
        "type": "function",
        "z": "87cb301d.9893c",
        "name": "Set LED icon color",
        "func": "msg.color = (msg.payload == \"true\") ? global.get('color.widget.light.led') : \"grey\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 240,
        "wires": [
            [
                "a94198ff.eef948"
            ]
        ]
    },
    {
        "id": "62af3da0.9e2494",
        "type": "function",
        "z": "5127740.f28848c",
        "name": "Set static system variables",
        "func": "global.set('seedTray.water.level.threshold.low', 40);\nglobal.set('seedTray.water.level.threshold.high', 85);\n\nglobal.set('config.peristaltic.flow', 2); // flow in mL / sec\n\n\nglobal.set('color.warning', \"#CC3300\");\nglobal.set('color.widget.water', \"#0077be\");\nglobal.set('color.widget.light.led', \"#ffc30b\");\nglobal.set('color.widget.nutrients', \"#bb86fc\");\nglobal.set('color.widget.ph', \"\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c8aa275d.cd9128",
        "type": "inject",
        "z": "5127740.f28848c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "62af3da0.9e2494"
            ]
        ]
    },
    {
        "id": "1b85a90a.07a897",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "6c15eb0d.8f5814",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "Water control label",
        "label": "<b><i class=\"fa fa-cog\"></i> Control</b>",
        "format": "",
        "layout": "row-left",
        "x": 870,
        "y": 1886,
        "wires": []
    },
    {
        "id": "ba791300.7ab1",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "8d4aab9b.4d6328",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "Nutrients control label",
        "label": "<b><i class=\"fa fa-cog\"></i> Control</b>",
        "format": "",
        "layout": "row-left",
        "x": 880,
        "y": 1926,
        "wires": []
    },
    {
        "id": "933e05f4.0abbb8",
        "type": "ui_switch",
        "z": "87cb301d.9893c",
        "name": "Water pump",
        "label": "Water pump",
        "tooltip": "",
        "group": "6c15eb0d.8f5814",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-toggle-on fa-2x",
        "oncolor": "#0077be",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-toggle-off fa-2x",
        "offcolor": "#0077be",
        "x": 270,
        "y": 1920,
        "wires": [
            [
                "da7d1a1e.239e58"
            ]
        ]
    },
    {
        "id": "652a6ac7.e928e4",
        "type": "debug",
        "z": "87cb301d.9893c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2000,
        "wires": []
    },
    {
        "id": "2f179774.4055e8",
        "type": "function",
        "z": "87cb301d.9893c",
        "name": "Set color",
        "func": "msg.color = (msg.payload.relay_state == 1) ? global.get(\"color.widget.water\") : \"grey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 1940,
        "wires": [
            [
                "ea84252f.eb1ee8"
            ]
        ]
    },
    {
        "id": "ea84252f.eb1ee8",
        "type": "ui_text",
        "z": "87cb301d.9893c",
        "group": "6c15eb0d.8f5814",
        "order": 16,
        "width": 1,
        "height": 1,
        "name": "Water pump on/off state",
        "label": "<font color=\"{{msg.color}}\"><i class=\"fa fa-tint fa-2x\"></i></front>",
        "format": "",
        "layout": "row-spread",
        "x": 910,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b5b54050.b692c",
        "type": "ui_text",
        "z": "1d22c714.e50369",
        "group": "45199dde.854f64",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "Lights control label",
        "label": "<b><i class=\"fa fa-cog\"></i> Control</b>",
        "format": "",
        "layout": "row-left",
        "x": 1090,
        "y": 1900,
        "wires": []
    },
    {
        "id": "6921fbdb.48e634",
        "type": "ui_template",
        "z": "1d22c714.e50369",
        "group": "1c37dc0b.ce28e4",
        "name": "Header - menu buttons",
        "order": 10,
        "width": 3,
        "height": 1,
        "format": "\n<script id=\"TopHeader\" type=\"text/javascript\">\n\nvar home = new Object();\nhome.payload = 'Hydroponic'; // This is the payload that goes out\n    \nvar schedule = new Object();\nschedule.payload = 'Schedule'; // This is the payload that goes out\n    \nvar setting = new Object();\nsetting.payload = 'Setting'; // This is the payload that goes out\n\nvar graph = new Object();\ngraph.payload = 'Graph'; // This is the payload that goes out\n    \nvar theScope = scope;\nelementsAdded = false;\n    \n$(function (scope) {\n    \n    if (scope.elementsAdded) {\n        console.log(\"elements already added. exit.\");\n        return;\n    }\n    \n    scope.elementsAdded = true;\n    \n    // add button\n    var divButtons = $('<div />');\n    divButtons[0].style.position=\"absolute\";\n    divButtons[0].style.right = \"5%\";\n    \n    var homeButton = document.createElement(\"button\");\n    homeButton.className += \"md-icon-button md-button md-ink-ripple\";\n    homeButton.innerHTML = '<i class=\"fa fa-tachometer\" aria-hidden=\"true\"></i>';\n    homeButton.addEventListener(\"click\", doIT.bind(null,home));\n    homeButton.style.margin = '5px';\n    divButtons.append(homeButton);\n    \n     // add agenda button\n    var agendaButton = document.createElement(\"button\");\n    agendaButton.className += \"md-icon-button md-button md-ink-ripple\";\n    agendaButton.innerHTML = '<i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>';\n    agendaButton.addEventListener(\"click\", doIT.bind(null,schedule));\n    agendaButton.style.margin = '5px';\n    divButtons.append(agendaButton);\n   \n        \n    // add Graph button\n    var graphButton = document.createElement(\"button\");\n    graphButton.className += \"md-icon-button md-button md-ink-ripple\";\n    graphButton.innerHTML = '<i class=\"fa fa-area-chart\" aria-hidden=\"true\"></i>';\n    graphButton.addEventListener(\"click\", doIT.bind(null,graph));\n    graphButton.style.margin = '5px';\n    divButtons.append(graphButton);\n    \n    // add button\n    var settingsButton = document.createElement(\"button\");\n    settingsButton.className += \"md-icon-button md-button md-ink-ripple\";\n    settingsButton.innerHTML = '<i class=\"fa fa-sliders\" aria-hidden=\"true\"></i>';\n    settingsButton.addEventListener(\"click\", doIT.bind(null,setting));\n    settingsButton.style.margin = '5px';\n    divButtons.append(settingsButton);\n\n    \n    var toolbar = $('.md-toolbar-tools');\n    if(!toolbar.length) return;\n\n\n    toolbar.append(divButtons);  \n\n    \n    function doIT(m){\n        theScope.send( m )\n    }\n\n    function doThis(m){\n        theScope.send( m )\n    }\n\n});\n    \n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 470,
        "y": 60,
        "wires": [
            [
                "27f25225.1ccc9e",
                "4966b810.210668",
                "c142bf5f.eb819",
                "ccfb9c89.f2c45"
            ]
        ]
    },
    {
        "id": "27f25225.1ccc9e",
        "type": "ui_ui_control",
        "z": "1d22c714.e50369",
        "name": "go to settings",
        "events": "change",
        "x": 740,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4966b810.210668",
        "type": "ui_ui_control",
        "z": "1d22c714.e50369",
        "name": "go to Graph",
        "events": "change",
        "x": 730,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c142bf5f.eb819",
        "type": "ui_ui_control",
        "z": "1d22c714.e50369",
        "name": "go to Hydroponic",
        "events": "change",
        "x": 750,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "ccfb9c89.f2c45",
        "type": "ui_ui_control",
        "z": "1d22c714.e50369",
        "name": "go to Schedule",
        "events": "change",
        "x": 740,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "85c3e511.6fbc68",
        "type": "comment",
        "z": "1d22c714.e50369",
        "name": "UI header - menu buttons",
        "info": "",
        "x": 470,
        "y": 20,
        "wires": []
    },
    {
        "id": "1516235d.d1ebfd",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "\nglobal.set('minPPM',msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9b926b5.9115898",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "\nglobal.set('maxPPM',msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3f752648.74e6ca",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "minPPMValue",
        "storageNode": "217cc961.603ce6",
        "x": 600,
        "y": 140,
        "wires": []
    },
    {
        "id": "9146934f.83cb1",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "minPPMValue",
        "storageNode": "217cc961.603ce6",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "a65a3b1b.47fc98"
            ]
        ]
    },
    {
        "id": "b7985833.9fdba8",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "maxPPMValue",
        "storageNode": "217cc961.603ce6",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "a5cee59.fa0fd18",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "maxPPMValue",
        "storageNode": "217cc961.603ce6",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "141d0c8a.d98be3"
            ]
        ]
    },
    {
        "id": "7bcd1b8c.9818e4",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "\nglobal.set('minPH',msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "982fabd3.e49df8",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "\nglobal.set('maxPH',msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "71390326.464c4c",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "minPHValue",
        "storageNode": "217cc961.603ce6",
        "x": 570,
        "y": 400,
        "wires": []
    },
    {
        "id": "e8398002.767f4",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "minPHValue",
        "storageNode": "217cc961.603ce6",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "f6b1cbb0.3cd9e8"
            ]
        ]
    },
    {
        "id": "80f40634.689f48",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "maxPHValue",
        "storageNode": "217cc961.603ce6",
        "x": 570,
        "y": 480,
        "wires": []
    },
    {
        "id": "3cd6faa8.f9bab6",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "maxPHValue",
        "storageNode": "217cc961.603ce6",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "dd9cce6b.677ad"
            ]
        ]
    },
    {
        "id": "5b859dcf.f2f8f4",
        "type": "comment",
        "z": "9441712c.a6198",
        "name": "### System variable configuration",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "1b0ae6f9.985959",
        "type": "link out",
        "z": "9441712c.a6198",
        "name": "Min PPM value updated",
        "links": [
            "80ecf0e1.ea61b"
        ],
        "x": 515,
        "y": 60,
        "wires": []
    },
    {
        "id": "f334d767.83e348",
        "type": "link out",
        "z": "9441712c.a6198",
        "name": "",
        "links": [
            "d8805062.990f5"
        ],
        "x": 455,
        "y": 420,
        "wires": []
    },
    {
        "id": "dd9cce6b.677ad",
        "type": "ui_numeric",
        "z": "9441712c.a6198",
        "name": "Max. PH",
        "label": "<i class=\"fa fa-arrow-circle-down\"></i> Max. PH",
        "tooltip": "Maximum PH threshold to trigger event",
        "group": "1c4b8cb2.e1e2e3",
        "order": 10,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "PH max value numeric input",
        "format": "{{value}}",
        "min": 0,
        "max": "14",
        "step": "0.1",
        "x": 340,
        "y": 460,
        "wires": [
            [
                "f334d767.83e348",
                "982fabd3.e49df8",
                "80f40634.689f48"
            ]
        ]
    },
    {
        "id": "f6b1cbb0.3cd9e8",
        "type": "ui_numeric",
        "z": "9441712c.a6198",
        "name": "Min. PH",
        "label": "<i class=\"fa fa-arrow-circle-up\"></i> Min. PH",
        "tooltip": "Minimum PH threshold to trigger event",
        "group": "1c4b8cb2.e1e2e3",
        "order": 13,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "Min. PH value",
        "format": "{{value}}",
        "min": 0,
        "max": "14",
        "step": "0.1",
        "x": 340,
        "y": 380,
        "wires": [
            [
                "7bcd1b8c.9818e4",
                "71390326.464c4c",
                "f334d767.83e348"
            ]
        ]
    },
    {
        "id": "a65a3b1b.47fc98",
        "type": "ui_numeric",
        "z": "9441712c.a6198",
        "name": "Min. PPM numeric input",
        "label": "<i class=\"fa fa-arrow-circle-up\"></i> Min. PPM",
        "tooltip": "Min PPM threshold to trigger event",
        "group": "1c4b8cb2.e1e2e3",
        "order": 6,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "step": "100",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "1516235d.d1ebfd",
                "3f752648.74e6ca",
                "1b0ae6f9.985959"
            ]
        ]
    },
    {
        "id": "141d0c8a.d98be3",
        "type": "ui_numeric",
        "z": "9441712c.a6198",
        "name": "Max. PPM numeric input",
        "label": "<i class=\"fa fa-arrow-circle-down\"></i> Max. PPM",
        "tooltip": "Max PPM threshold to trigger event",
        "group": "1c4b8cb2.e1e2e3",
        "order": 3,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "step": "100",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "9b926b5.9115898",
                "b7985833.9fdba8"
            ]
        ]
    },
    {
        "id": "18d6c45d.7ab59c",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Nutrients settings",
        "label": "<b><i class=\"fa fa-sliders\"></i> Nutrients </b>",
        "format": "",
        "layout": "row-left",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "d7136115.91c37",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "PH settings",
        "label": "<b><i class=\"fa fa-sliders\"></i> PH </b>",
        "format": "",
        "layout": "row-left",
        "x": 90,
        "y": 340,
        "wires": []
    },
    {
        "id": "527c695b.4fdf98",
        "type": "ui_slider",
        "z": "9441712c.a6198",
        "name": "Water spray duration",
        "label": "<i class=\"fa fa-clock-o\"></i>",
        "tooltip": "Water spray duration",
        "group": "1c4b8cb2.e1e2e3",
        "order": 17,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "60",
        "step": "5",
        "x": 340,
        "y": 620,
        "wires": [
            [
                "507ee2f6.516eec",
                "4daaa0a0.02a9a",
                "4cc660a2.d792",
                "3339466d.6d58aa"
            ]
        ]
    },
    {
        "id": "507ee2f6.516eec",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 18,
        "width": 1,
        "height": 1,
        "name": "Water spray duration min value",
        "label": "",
        "format": "{{msg.payload}} sec.",
        "layout": "row-center",
        "x": 610,
        "y": 601,
        "wires": []
    },
    {
        "id": "4daaa0a0.02a9a",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "\nglobal.set('durationWaterSpray',msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 641,
        "wires": [
            []
        ]
    },
    {
        "id": "4cc660a2.d792",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "waterSprayTimer",
        "storageNode": "217cc961.603ce6",
        "x": 570,
        "y": 681,
        "wires": []
    },
    {
        "id": "49af6c92.3da8a4",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "waterSprayTimer",
        "storageNode": "217cc961.603ce6",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "527c695b.4fdf98"
            ]
        ]
    },
    {
        "id": "3339466d.6d58aa",
        "type": "link out",
        "z": "9441712c.a6198",
        "name": "Water spray duration update",
        "links": [
            "593527d0.c1f528"
        ],
        "x": 495,
        "y": 561,
        "wires": []
    },
    {
        "id": "fc1cbcae.827d",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "Water spray setting",
        "label": "<b><i class=\"fa fa-sliders\"></i> Seed tray - Water spray </b>",
        "format": "",
        "layout": "row-left",
        "x": 110,
        "y": 560,
        "wires": []
    },
    {
        "id": "2229125e.9cc0de",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "global.set('seed.totalLight',msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "c231a613.adbd18",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "seed.totalLight",
        "storageNode": "217cc961.603ce6",
        "x": 680,
        "y": 880,
        "wires": []
    },
    {
        "id": "304a2fa1.758d7",
        "type": "link out",
        "z": "9441712c.a6198",
        "name": "Change total light slider",
        "links": [
            "3dfc5ff2.440c6"
        ],
        "x": 615,
        "y": 800,
        "wires": []
    },
    {
        "id": "57d5c94c.049dc8",
        "type": "ui_numeric",
        "z": "9441712c.a6198",
        "name": "Total light",
        "label": "<i class=\"fa fa-clock-o\"> Daily light</i>",
        "tooltip": "",
        "group": "1c4b8cb2.e1e2e3",
        "order": 31,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}} h.",
        "min": 0,
        "max": "24",
        "step": 1,
        "x": 500,
        "y": 840,
        "wires": [
            [
                "304a2fa1.758d7",
                "2229125e.9cc0de",
                "c231a613.adbd18"
            ]
        ]
    },
    {
        "id": "5ae3f27b.9d6a9c",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Configure widget",
        "func": "var minValue = global.get('sun.total') || 1;\nmsg.ui_control = {\"min\":Math.floor(minValue/3600)+1};\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 840,
        "wires": [
            [
                "57d5c94c.049dc8"
            ]
        ]
    },
    {
        "id": "35ea3272.82355e",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "seed.totalLight",
        "storageNode": "217cc961.603ce6",
        "x": 120,
        "y": 840,
        "wires": [
            [
                "5ae3f27b.9d6a9c"
            ]
        ]
    },
    {
        "id": "bb11a03a.365f2",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 29,
        "width": 0,
        "height": 0,
        "name": "Seed tray - total light setting",
        "label": "<b><i class=\"fa fa-sliders\"></i> Seed Tray - Total light </b>",
        "format": "",
        "layout": "row-left",
        "x": 140,
        "y": 780,
        "wires": []
    },
    {
        "id": "48d7f256.20251c",
        "type": "ui_slider",
        "z": "9441712c.a6198",
        "name": "Nutriments solution A pump duration slider",
        "label": "<i class=\"fa fa-clock-o\"></i>",
        "tooltip": "Nutriments pump duration",
        "group": "1c4b8cb2.e1e2e3",
        "order": 22,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "1",
        "max": "30",
        "step": 1,
        "x": 450,
        "y": 1020,
        "wires": [
            [
                "af36d027.bab06",
                "96fa6ce2.9f802",
                "4bd2e2e4.f0b2dc"
            ]
        ]
    },
    {
        "id": "af36d027.bab06",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 23,
        "width": 1,
        "height": 1,
        "name": "Nutriments sol. A timer ",
        "label": "",
        "format": "{{msg.payload}} sec.",
        "layout": "row-center",
        "x": 760,
        "y": 1020,
        "wires": []
    },
    {
        "id": "96fa6ce2.9f802",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "\nglobal.set('nutriments.solutionA.pump.duration',msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "4bd2e2e4.f0b2dc",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "nutrimentsSolutionATimer",
        "storageNode": "217cc961.603ce6",
        "x": 770,
        "y": 1100,
        "wires": []
    },
    {
        "id": "76032356.e1847c",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "nutrimentsSolutionATimer",
        "storageNode": "217cc961.603ce6",
        "x": 130,
        "y": 1020,
        "wires": [
            [
                "48d7f256.20251c"
            ]
        ]
    },
    {
        "id": "7c8c85b6.c030fc",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "Nutrients settings",
        "label": "<b><i class=\"fa fa-sliders\"></i> Nutrients pumps</b>",
        "format": "",
        "layout": "row-left",
        "x": 110,
        "y": 960,
        "wires": []
    },
    {
        "id": "964e551c.a86e58",
        "type": "ui_slider",
        "z": "9441712c.a6198",
        "name": "Nutriments solution B pump duration slider",
        "label": "<i class=\"fa fa-clock-o\"></i>",
        "tooltip": "Nutriments pump duration",
        "group": "1c4b8cb2.e1e2e3",
        "order": 26,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "1",
        "max": "30",
        "step": 1,
        "x": 450,
        "y": 1180,
        "wires": [
            [
                "214657c1.8f5c38",
                "f7bbc881.6f67d8",
                "4bb6cd3b.4abba4"
            ]
        ]
    },
    {
        "id": "214657c1.8f5c38",
        "type": "ui_text",
        "z": "9441712c.a6198",
        "group": "1c4b8cb2.e1e2e3",
        "order": 27,
        "width": 1,
        "height": 1,
        "name": "Nutriments sol. B timer ",
        "label": "",
        "format": "{{msg.payload}} sec.",
        "layout": "row-center",
        "x": 750,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f7bbc881.6f67d8",
        "type": "function",
        "z": "9441712c.a6198",
        "name": "Save global variable",
        "func": "global.set('nutriments.solutionB.pump.duration',msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "4bb6cd3b.4abba4",
        "type": "persist in",
        "z": "9441712c.a6198",
        "name": "nutrimentsSolutionBTimer",
        "storageNode": "217cc961.603ce6",
        "x": 750,
        "y": 1256,
        "wires": []
    },
    {
        "id": "3aba810e.34fabe",
        "type": "persist out",
        "z": "9441712c.a6198",
        "name": "nutrimentsSolutionBTimer",
        "storageNode": "217cc961.603ce6",
        "x": 130,
        "y": 1180,
        "wires": [
            [
                "964e551c.a86e58"
            ]
        ]
    },
    {
        "id": "66abeaea.148fd4",
        "type": "ui_template",
        "z": "1d22c714.e50369",
        "group": "40dc9b6d.55ee84",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "\n  <svg id=\"meter\">\n\n    <g ng-repeat=\"(key, value) in seedTray\">\n      \n      <rect x=\"{{value.xpos}}\" \n           y=\"{{value.ypos}}\"\n           width=\"{{value.width}}\" height=\"{{value.height}}\" style=\"fill:{{value.hexColor}}\"  />\n       \n    </g>\n    \n\n  </svg>\n\n\n<script>\n    \n(function(scope) {\n    \n     scope.seedTray = \n        [{\n            \"column\": \"1\",\n            \"row\": \"1\",\n            \"hexColor\": \"#ec5656\",\n            \"type\": \"salad\"\n        }, \n        {  \n            \"column\": \"1\",\n            \"row\": \"2\",\n            \"hexColor\": \"#ec5656\",\n            \"type\": \"empty\"\n        },\n        {\n            \"column\": \"1\",\n            \"row\": \"3\",\n            \"hexColor\": \"#f2c957\",\n            \"type\": \"empty\"\n        },\n        {  \n            \"column\": \"2\",\n            \"row\": \"1\",\n            \"hexColor\": \"#9dc248\",\n            \"type\": \"salad\"\n        },\n        {  \n            \"column\": \"2\",\n            \"row\": \"2\",\n            \"hexColor\": \"#1dae68\",\n            \"type\": \"salad\"\n        },\n        {  \n            \"column\": \"2\",\n            \"row\": \"3\",\n            \"hexColor\": \"#4bb752\",\n            \"level\": \"empty\"\n        }]; \n    \n    // $watch fires each time the node is triggered in the flow\n    scope.$watch('msg', function(msg) {\n        \n        var boxWidth = 25, boxHeight = 25;\n        var leftPadding = 25;\n        var boxSpacing = 3;\n        var topPadding = 15;\n        \n        \n        angular.forEach(scope.seedTray, function (value, key) {\n            \n            value[\"xpos\"] = key * boxWidth + key * boxSpacing + leftPadding;\n            value[\"ypos\"] = value[\"row\"] * boxHeight + value[\"row\"] * boxSpacing + topPadding;\n            value[\"width\"] = boxWidth; \n            value[\"height\"]= boxHeight; \n            \n        });\n        \n       /* var sectorMinPh = msg.minPH;\n        var sectorMaxPh = msg.maxPH;\n        \n        if (sectorMaxPh >= 12) {\n            sectorMaxPh = 11.9;\n        }\n        \n        \n        scope.sectorXMinPH = (Math.floor(sectorMinPh)-1) * phWidth + (Math.floor(sectorMinPh)-1) * phSpacing + phInitialPadding + ((sectorMinPh % 1) * phWidth);\n        scope.sectorXMaxPH = (Math.floor(sectorMaxPh)-1) * phWidth + (Math.floor(sectorMaxPh)-1) * phSpacing + phInitialPadding + ((sectorMaxPh % 1) * phWidth);\n        scope.sectorPhY = phYpos;\n        \n        // Find PH or default to 7 (it happens when updating min or max PH sectors)\n        scope.currentPHValue = (msg.payload) ? Number.parseFloat(msg.payload).toFixed(2) : 7;\n        scope.XcurrentPH = (Math.floor(scope.currentPHValue)-1) * phWidth + (Math.floor(scope.currentPHValue)-1) * phSpacing + phInitialPadding + ((scope.currentPHValue % 1) * phWidth);\n        scope.YcurrentPH = phYpos + phHeight + 5;\n        scope.triangleSize = 4;\n        \n\n        if (scope.currentPHValue >= sectorMinPh && scope.currentPHValue <= sectorMaxPh) { \n            scope.currentPhStatus = \"Optimal\";\n            scope.currentPhColor = \"#42a37a\";\n        } else {\n            scope.currentPhStatus = scope.phScale[Math.floor(scope.currentPHValue) + 1][\"level\"];\n            scope.currentPhColor = \"#ec3d49\";\n        }*/\n        \n        \n    });\n\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 250,
        "y": 1200,
        "wires": [
            []
        ]
    }
]